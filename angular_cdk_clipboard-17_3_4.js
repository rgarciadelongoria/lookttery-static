import{DOCUMENT as a}from"@angular/common";import*as i from"@angular/core";import{InjectionToken as p,EventEmitter as u}from"@angular/core";var r=class{constructor(s,e){this._document=e;let t=this._textarea=this._document.createElement("textarea"),n=t.style;n.position="fixed",n.top=n.opacity="0",n.left="-999em",t.setAttribute("aria-hidden","true"),t.value=s,t.readOnly=!0,(this._document.fullscreenElement||this._document.body).appendChild(t)}copy(){let s=this._textarea,e=!1;try{if(s){let t=this._document.activeElement;s.select(),s.setSelectionRange(0,s.value.length),e=this._document.execCommand("copy"),t&&t.focus()}}catch{}return e}destroy(){let s=this._textarea;s&&(s.remove(),this._textarea=void 0)}},l=(()=>{class o{constructor(e){this._document=e}copy(e){let t=this.beginCopy(e),n=t.copy();return t.destroy(),n}beginCopy(e){return new r(e,this._document)}static{this.\u0275fac=function(t){return new(t||o)(i.\u0275\u0275inject(a))}}static{this.\u0275prov=i.\u0275\u0275defineInjectable({token:o,factory:o.\u0275fac,providedIn:"root"})}}return o})(),h=new p("CDK_COPY_TO_CLIPBOARD_CONFIG"),x=(()=>{class o{constructor(e,t,n){this._clipboard=e,this._ngZone=t,this.text="",this.attempts=1,this.copied=new u,this._pending=new Set,n&&n.attempts!=null&&(this.attempts=n.attempts)}copy(e=this.attempts){if(e>1){let t=e,n=this._clipboard.beginCopy(this.text);this._pending.add(n);let c=()=>{let d=n.copy();!d&&--t&&!this._destroyed?this._currentTimeout=this._ngZone.runOutsideAngular(()=>setTimeout(c,1)):(this._currentTimeout=null,this._pending.delete(n),n.destroy(),this.copied.emit(d))};c()}else this.copied.emit(this._clipboard.copy(this.text))}ngOnDestroy(){this._currentTimeout&&clearTimeout(this._currentTimeout),this._pending.forEach(e=>e.destroy()),this._pending.clear(),this._destroyed=!0}static{this.\u0275fac=function(t){return new(t||o)(i.\u0275\u0275directiveInject(l),i.\u0275\u0275directiveInject(i.NgZone),i.\u0275\u0275directiveInject(h,8))}}static{this.\u0275dir=i.\u0275\u0275defineDirective({type:o,selectors:[["","cdkCopyToClipboard",""]],hostBindings:function(t,n){t&1&&i.\u0275\u0275listener("click",function(){return n.copy()})},inputs:{text:["cdkCopyToClipboard","text"],attempts:["cdkCopyToClipboardAttempts","attempts"]},outputs:{copied:"cdkCopyToClipboardCopied"},standalone:!0})}}return o})(),D=(()=>{class o{static{this.\u0275fac=function(t){return new(t||o)}}static{this.\u0275mod=i.\u0275\u0275defineNgModule({type:o})}static{this.\u0275inj=i.\u0275\u0275defineInjector({})}}return o})();export{h as CDK_COPY_TO_CLIPBOARD_CONFIG,x as CdkCopyToClipboard,l as Clipboard,D as ClipboardModule,r as PendingCopy};
