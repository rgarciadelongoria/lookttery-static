{
  "version": 3,
  "sources": ["../../@ionic/core/components/helpers.js", "../../@ionic/core/components/index2.js", "../../@ionic/angular/fesm2020/ionic-angular-common.mjs", "../../@ionic/core/components/index.js", "../../@ionic/core/components/ionic-global.js"],
  "sourcesContent": ["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst transitionEndAsync = (el, expectedDuration = 0) => {\n    return new Promise((resolve) => {\n        transitionEnd(el, expectedDuration, resolve);\n    });\n};\n/**\n * Allows developer to wait for a transition\n * to finish and fallback to a timer if the\n * transition is cancelled or otherwise\n * never finishes. Also see transitionEndAsync\n * which is an await-able version of this.\n */\nconst transitionEnd = (el, expectedDuration = 0, callback) => {\n    let unRegTrans;\n    let animationTimeout;\n    const opts = { passive: true };\n    const ANIMATION_FALLBACK_TIMEOUT = 500;\n    const unregister = () => {\n        if (unRegTrans) {\n            unRegTrans();\n        }\n    };\n    const onTransitionEnd = (ev) => {\n        if (ev === undefined || el === ev.target) {\n            unregister();\n            callback(ev);\n        }\n    };\n    if (el) {\n        el.addEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n        el.addEventListener('transitionend', onTransitionEnd, opts);\n        animationTimeout = setTimeout(onTransitionEnd, expectedDuration + ANIMATION_FALLBACK_TIMEOUT);\n        unRegTrans = () => {\n            if (animationTimeout) {\n                clearTimeout(animationTimeout);\n                animationTimeout = undefined;\n            }\n            el.removeEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n            el.removeEventListener('transitionend', onTransitionEnd, opts);\n        };\n    }\n    return unregister;\n};\n/**\n * Waits for a component to be ready for\n * both custom element and non-custom element builds.\n * If non-custom element build, el.componentOnReady\n * will be used.\n * For custom element builds, we wait a frame\n * so that the inner contents of the component\n * have a chance to render.\n *\n * Use this utility rather than calling\n * el.componentOnReady yourself.\n */\nconst componentOnReady = (el, callback) => {\n    if (el.componentOnReady) {\n        // eslint-disable-next-line custom-rules/no-component-on-ready-method\n        el.componentOnReady().then((resolvedEl) => callback(resolvedEl));\n    }\n    else {\n        raf(() => callback(el));\n    }\n};\n/**\n * This functions checks if a Stencil component is using\n * the lazy loaded build of Stencil. Returns `true` if\n * the component is lazy loaded. Returns `false` otherwise.\n */\nconst hasLazyBuild = (stencilEl) => {\n    return stencilEl.componentOnReady !== undefined;\n};\n/**\n * Elements inside of web components sometimes need to inherit global attributes\n * set on the host. For example, the inner input in `ion-input` should inherit\n * the `title` attribute that developers set directly on `ion-input`. This\n * helper function should be called in componentWillLoad and assigned to a variable\n * that is later used in the render function.\n *\n * This does not need to be reactive as changing attributes on the host element\n * does not trigger a re-render.\n */\nconst inheritAttributes = (el, attributes = []) => {\n    const attributeObject = {};\n    attributes.forEach((attr) => {\n        if (el.hasAttribute(attr)) {\n            const value = el.getAttribute(attr);\n            if (value !== null) {\n                attributeObject[attr] = el.getAttribute(attr);\n            }\n            el.removeAttribute(attr);\n        }\n    });\n    return attributeObject;\n};\n/**\n * List of available ARIA attributes + `role`.\n * Removed deprecated attributes.\n * https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes\n */\nconst ariaAttributes = [\n    'role',\n    'aria-activedescendant',\n    'aria-atomic',\n    'aria-autocomplete',\n    'aria-braillelabel',\n    'aria-brailleroledescription',\n    'aria-busy',\n    'aria-checked',\n    'aria-colcount',\n    'aria-colindex',\n    'aria-colindextext',\n    'aria-colspan',\n    'aria-controls',\n    'aria-current',\n    'aria-describedby',\n    'aria-description',\n    'aria-details',\n    'aria-disabled',\n    'aria-errormessage',\n    'aria-expanded',\n    'aria-flowto',\n    'aria-haspopup',\n    'aria-hidden',\n    'aria-invalid',\n    'aria-keyshortcuts',\n    'aria-label',\n    'aria-labelledby',\n    'aria-level',\n    'aria-live',\n    'aria-multiline',\n    'aria-multiselectable',\n    'aria-orientation',\n    'aria-owns',\n    'aria-placeholder',\n    'aria-posinset',\n    'aria-pressed',\n    'aria-readonly',\n    'aria-relevant',\n    'aria-required',\n    'aria-roledescription',\n    'aria-rowcount',\n    'aria-rowindex',\n    'aria-rowindextext',\n    'aria-rowspan',\n    'aria-selected',\n    'aria-setsize',\n    'aria-sort',\n    'aria-valuemax',\n    'aria-valuemin',\n    'aria-valuenow',\n    'aria-valuetext',\n];\n/**\n * Returns an array of aria attributes that should be copied from\n * the shadow host element to a target within the light DOM.\n * @param el The element that the attributes should be copied from.\n * @param ignoreList The list of aria-attributes to ignore reflecting and removing from the host.\n * Use this in instances where we manually specify aria attributes on the `<Host>` element.\n */\nconst inheritAriaAttributes = (el, ignoreList) => {\n    let attributesToInherit = ariaAttributes;\n    if (ignoreList && ignoreList.length > 0) {\n        attributesToInherit = attributesToInherit.filter((attr) => !ignoreList.includes(attr));\n    }\n    return inheritAttributes(el, attributesToInherit);\n};\nconst addEventListener = (el, eventName, callback, opts) => {\n    var _a;\n    if (typeof window !== 'undefined') {\n        const win = window;\n        const config = (_a = win === null || win === void 0 ? void 0 : win.Ionic) === null || _a === void 0 ? void 0 : _a.config;\n        if (config) {\n            const ael = config.get('_ael');\n            if (ael) {\n                return ael(el, eventName, callback, opts);\n            }\n            else if (config._ael) {\n                return config._ael(el, eventName, callback, opts);\n            }\n        }\n    }\n    return el.addEventListener(eventName, callback, opts);\n};\nconst removeEventListener = (el, eventName, callback, opts) => {\n    var _a;\n    if (typeof window !== 'undefined') {\n        const win = window;\n        const config = (_a = win === null || win === void 0 ? void 0 : win.Ionic) === null || _a === void 0 ? void 0 : _a.config;\n        if (config) {\n            const rel = config.get('_rel');\n            if (rel) {\n                return rel(el, eventName, callback, opts);\n            }\n            else if (config._rel) {\n                return config._rel(el, eventName, callback, opts);\n            }\n        }\n    }\n    return el.removeEventListener(eventName, callback, opts);\n};\n/**\n * Gets the root context of a shadow dom element\n * On newer browsers this will be the shadowRoot,\n * but for older browser this may just be the\n * element itself.\n *\n * Useful for whenever you need to explicitly\n * do \"myElement.shadowRoot!.querySelector(...)\".\n */\nconst getElementRoot = (el, fallback = el) => {\n    return el.shadowRoot || fallback;\n};\n/**\n * Patched version of requestAnimationFrame that avoids ngzone\n * Use only when you know ngzone should not run\n */\nconst raf = (h) => {\n    if (typeof __zone_symbol__requestAnimationFrame === 'function') {\n        return __zone_symbol__requestAnimationFrame(h);\n    }\n    if (typeof requestAnimationFrame === 'function') {\n        return requestAnimationFrame(h);\n    }\n    return setTimeout(h);\n};\nconst hasShadowDom = (el) => {\n    return !!el.shadowRoot && !!el.attachShadow;\n};\nconst findItemLabel = (componentEl) => {\n    const itemEl = componentEl.closest('ion-item');\n    if (itemEl) {\n        return itemEl.querySelector('ion-label');\n    }\n    return null;\n};\nconst focusElement = (el) => {\n    el.focus();\n    /**\n     * When programmatically focusing an element,\n     * the focus-visible utility will not run because\n     * it is expecting a keyboard event to have triggered this;\n     * however, there are times when we need to manually control\n     * this behavior so we call the `setFocus` method on ion-app\n     * which will let us explicitly set the elements to focus.\n     */\n    if (el.classList.contains('ion-focusable')) {\n        const app = el.closest('ion-app');\n        if (app) {\n            app.setFocus([el]);\n        }\n    }\n};\n/**\n * This method is used for Ionic's input components that use Shadow DOM. In\n * order to properly label the inputs to work with screen readers, we need\n * to get the text content of the label outside of the shadow root and pass\n * it to the input inside of the shadow root.\n *\n * Referencing label elements by id from outside of the component is\n * impossible due to the shadow boundary, read more here:\n * https://developer.salesforce.com/blogs/2020/01/accessibility-for-web-components.html\n *\n * @param componentEl The shadow element that needs the aria label\n * @param inputId The unique identifier for the input\n */\nconst getAriaLabel = (componentEl, inputId) => {\n    let labelText;\n    // If the user provides their own label via the aria-labelledby attr\n    // we should use that instead of looking for an ion-label\n    const labelledBy = componentEl.getAttribute('aria-labelledby');\n    // Grab the id off of the component in case they are using\n    // a custom label using the label element\n    const componentId = componentEl.id;\n    let labelId = labelledBy !== null && labelledBy.trim() !== '' ? labelledBy : inputId + '-lbl';\n    let label = labelledBy !== null && labelledBy.trim() !== '' ? document.getElementById(labelledBy) : findItemLabel(componentEl);\n    if (label) {\n        if (labelledBy === null) {\n            label.id = labelId;\n        }\n        labelText = label.textContent;\n        label.setAttribute('aria-hidden', 'true');\n        // if there is no label, check to see if the user has provided\n        // one by setting an id on the component and using the label element\n    }\n    else if (componentId.trim() !== '') {\n        label = document.querySelector(`label[for=\"${componentId}\"]`);\n        if (label) {\n            if (label.id !== '') {\n                labelId = label.id;\n            }\n            else {\n                label.id = labelId = `${componentId}-lbl`;\n            }\n            labelText = label.textContent;\n        }\n    }\n    return { label, labelId, labelText };\n};\n/**\n * This method is used to add a hidden input to a host element that contains\n * a Shadow DOM. It does not add the input inside of the Shadow root which\n * allows it to be picked up inside of forms. It should contain the same\n * values as the host element.\n *\n * @param always Add a hidden input even if the container does not use Shadow\n * @param container The element where the input will be added\n * @param name The name of the input\n * @param value The value of the input\n * @param disabled If true, the input is disabled\n */\nconst renderHiddenInput = (always, container, name, value, disabled) => {\n    if (always || hasShadowDom(container)) {\n        let input = container.querySelector('input.aux-input');\n        if (!input) {\n            input = container.ownerDocument.createElement('input');\n            input.type = 'hidden';\n            input.classList.add('aux-input');\n            container.appendChild(input);\n        }\n        input.disabled = disabled;\n        input.name = name;\n        input.value = value || '';\n    }\n};\nconst clamp = (min, n, max) => {\n    return Math.max(min, Math.min(n, max));\n};\nconst assert = (actual, reason) => {\n    if (!actual) {\n        const message = 'ASSERT: ' + reason;\n        console.error(message);\n        debugger; // eslint-disable-line\n        throw new Error(message);\n    }\n};\nconst now = (ev) => {\n    return ev.timeStamp || Date.now();\n};\nconst pointerCoord = (ev) => {\n    // get X coordinates for either a mouse click\n    // or a touch depending on the given event\n    if (ev) {\n        const changedTouches = ev.changedTouches;\n        if (changedTouches && changedTouches.length > 0) {\n            const touch = changedTouches[0];\n            return { x: touch.clientX, y: touch.clientY };\n        }\n        if (ev.pageX !== undefined) {\n            return { x: ev.pageX, y: ev.pageY };\n        }\n    }\n    return { x: 0, y: 0 };\n};\n/**\n * @hidden\n * Given a side, return if it should be on the end\n * based on the value of dir\n * @param side the side\n * @param isRTL whether the application dir is rtl\n */\nconst isEndSide = (side) => {\n    const isRTL = document.dir === 'rtl';\n    switch (side) {\n        case 'start':\n            return isRTL;\n        case 'end':\n            return !isRTL;\n        default:\n            throw new Error(`\"${side}\" is not a valid value for [side]. Use \"start\" or \"end\" instead.`);\n    }\n};\nconst debounceEvent = (event, wait) => {\n    const original = event._original || event;\n    return {\n        _original: event,\n        emit: debounce(original.emit.bind(original), wait),\n    };\n};\nconst debounce = (func, wait = 0) => {\n    let timer;\n    return (...args) => {\n        clearTimeout(timer);\n        timer = setTimeout(func, wait, ...args);\n    };\n};\n/**\n * Check whether the two string maps are shallow equal.\n *\n * undefined is treated as an empty map.\n *\n * @returns whether the keys are the same and the values are shallow equal.\n */\nconst shallowEqualStringMap = (map1, map2) => {\n    map1 !== null && map1 !== void 0 ? map1 : (map1 = {});\n    map2 !== null && map2 !== void 0 ? map2 : (map2 = {});\n    if (map1 === map2) {\n        return true;\n    }\n    const keys1 = Object.keys(map1);\n    if (keys1.length !== Object.keys(map2).length) {\n        return false;\n    }\n    for (const k1 of keys1) {\n        if (!(k1 in map2)) {\n            return false;\n        }\n        if (map1[k1] !== map2[k1]) {\n            return false;\n        }\n    }\n    return true;\n};\n\nexport { addEventListener as a, removeEventListener as b, componentOnReady as c, inheritAttributes as d, renderHiddenInput as e, focusElement as f, getElementRoot as g, hasShadowDom as h, inheritAriaAttributes as i, getAriaLabel as j, findItemLabel as k, hasLazyBuild as l, clamp as m, debounceEvent as n, isEndSide as o, assert as p, debounce as q, raf as r, shallowEqualStringMap as s, transitionEndAsync as t, now as u, pointerCoord as v };\n", "/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { writeTask, Build } from '@stencil/core/internal/client';\nimport { r as raf } from './helpers.js';\n\nconst LIFECYCLE_WILL_ENTER = 'ionViewWillEnter';\nconst LIFECYCLE_DID_ENTER = 'ionViewDidEnter';\nconst LIFECYCLE_WILL_LEAVE = 'ionViewWillLeave';\nconst LIFECYCLE_DID_LEAVE = 'ionViewDidLeave';\nconst LIFECYCLE_WILL_UNLOAD = 'ionViewWillUnload';\n\nconst iosTransitionAnimation = () => import('./ios.transition.js');\nconst mdTransitionAnimation = () => import('./md.transition.js');\n// TODO(FW-2832): types\nconst transition = (opts) => {\n    return new Promise((resolve, reject) => {\n        writeTask(() => {\n            beforeTransition(opts);\n            runTransition(opts).then((result) => {\n                if (result.animation) {\n                    result.animation.destroy();\n                }\n                afterTransition(opts);\n                resolve(result);\n            }, (error) => {\n                afterTransition(opts);\n                reject(error);\n            });\n        });\n    });\n};\nconst beforeTransition = (opts) => {\n    const enteringEl = opts.enteringEl;\n    const leavingEl = opts.leavingEl;\n    setZIndex(enteringEl, leavingEl, opts.direction);\n    if (opts.showGoBack) {\n        enteringEl.classList.add('can-go-back');\n    }\n    else {\n        enteringEl.classList.remove('can-go-back');\n    }\n    setPageHidden(enteringEl, false);\n    /**\n     * When transitioning, the page should not\n     * respond to click events. This resolves small\n     * issues like users double tapping the ion-back-button.\n     * These pointer events are removed in `afterTransition`.\n     */\n    enteringEl.style.setProperty('pointer-events', 'none');\n    if (leavingEl) {\n        setPageHidden(leavingEl, false);\n        leavingEl.style.setProperty('pointer-events', 'none');\n    }\n};\nconst runTransition = async (opts) => {\n    const animationBuilder = await getAnimationBuilder(opts);\n    const ani = animationBuilder && Build.isBrowser ? animation(animationBuilder, opts) : noAnimation(opts); // fast path for no animation\n    return ani;\n};\nconst afterTransition = (opts) => {\n    const enteringEl = opts.enteringEl;\n    const leavingEl = opts.leavingEl;\n    enteringEl.classList.remove('ion-page-invisible');\n    enteringEl.style.removeProperty('pointer-events');\n    if (leavingEl !== undefined) {\n        leavingEl.classList.remove('ion-page-invisible');\n        leavingEl.style.removeProperty('pointer-events');\n    }\n};\nconst getAnimationBuilder = async (opts) => {\n    if (!opts.leavingEl || !opts.animated || opts.duration === 0) {\n        return undefined;\n    }\n    if (opts.animationBuilder) {\n        return opts.animationBuilder;\n    }\n    const getAnimation = opts.mode === 'ios'\n        ? (await iosTransitionAnimation()).iosTransitionAnimation\n        : (await mdTransitionAnimation()).mdTransitionAnimation;\n    return getAnimation;\n};\nconst animation = async (animationBuilder, opts) => {\n    await waitForReady(opts, true);\n    const trans = animationBuilder(opts.baseEl, opts);\n    fireWillEvents(opts.enteringEl, opts.leavingEl);\n    const didComplete = await playTransition(trans, opts);\n    if (opts.progressCallback) {\n        opts.progressCallback(undefined);\n    }\n    if (didComplete) {\n        fireDidEvents(opts.enteringEl, opts.leavingEl);\n    }\n    return {\n        hasCompleted: didComplete,\n        animation: trans,\n    };\n};\nconst noAnimation = async (opts) => {\n    const enteringEl = opts.enteringEl;\n    const leavingEl = opts.leavingEl;\n    await waitForReady(opts, false);\n    fireWillEvents(enteringEl, leavingEl);\n    fireDidEvents(enteringEl, leavingEl);\n    return {\n        hasCompleted: true,\n    };\n};\nconst waitForReady = async (opts, defaultDeep) => {\n    const deep = opts.deepWait !== undefined ? opts.deepWait : defaultDeep;\n    if (deep) {\n        await Promise.all([deepReady(opts.enteringEl), deepReady(opts.leavingEl)]);\n    }\n    await notifyViewReady(opts.viewIsReady, opts.enteringEl);\n};\nconst notifyViewReady = async (viewIsReady, enteringEl) => {\n    if (viewIsReady) {\n        await viewIsReady(enteringEl);\n    }\n};\nconst playTransition = (trans, opts) => {\n    const progressCallback = opts.progressCallback;\n    const promise = new Promise((resolve) => {\n        trans.onFinish((currentStep) => resolve(currentStep === 1));\n    });\n    // cool, let's do this, start the transition\n    if (progressCallback) {\n        // this is a swipe to go back, just get the transition progress ready\n        // kick off the swipe animation start\n        trans.progressStart(true);\n        progressCallback(trans);\n    }\n    else {\n        // only the top level transition should actually start \"play\"\n        // kick it off and let it play through\n        // ******** DOM WRITE ****************\n        trans.play();\n    }\n    // create a callback for when the animation is done\n    return promise;\n};\nconst fireWillEvents = (enteringEl, leavingEl) => {\n    lifecycle(leavingEl, LIFECYCLE_WILL_LEAVE);\n    lifecycle(enteringEl, LIFECYCLE_WILL_ENTER);\n};\nconst fireDidEvents = (enteringEl, leavingEl) => {\n    lifecycle(enteringEl, LIFECYCLE_DID_ENTER);\n    lifecycle(leavingEl, LIFECYCLE_DID_LEAVE);\n};\nconst lifecycle = (el, eventName) => {\n    if (el) {\n        const ev = new CustomEvent(eventName, {\n            bubbles: false,\n            cancelable: false,\n        });\n        el.dispatchEvent(ev);\n    }\n};\n/**\n * Wait two request animation frame loops.\n * This allows the framework implementations enough time to mount\n * the user-defined contents. This is often needed when using inline\n * modals and popovers that accept user components. For popover,\n * the contents must be mounted for the popover to be sized correctly.\n * For modals, the contents must be mounted for iOS to run the\n * transition correctly.\n *\n * On Angular and React, a single raf is enough time, but for Vue\n * we need to wait two rafs. As a result we are using two rafs for\n * all frameworks to ensure contents are mounted.\n */\nconst waitForMount = () => {\n    return new Promise((resolve) => raf(() => raf(() => resolve())));\n};\nconst deepReady = async (el) => {\n    const element = el;\n    if (element) {\n        if (element.componentOnReady != null) {\n            // eslint-disable-next-line custom-rules/no-component-on-ready-method\n            const stencilEl = await element.componentOnReady();\n            if (stencilEl != null) {\n                return;\n            }\n            /**\n             * Custom elements in Stencil will have __registerHost.\n             */\n        }\n        else if (element.__registerHost != null) {\n            /**\n             * Non-lazy loaded custom elements need to wait\n             * one frame for component to be loaded.\n             */\n            const waitForCustomElement = new Promise((resolve) => raf(resolve));\n            await waitForCustomElement;\n            return;\n        }\n        await Promise.all(Array.from(element.children).map(deepReady));\n    }\n};\nconst setPageHidden = (el, hidden) => {\n    if (hidden) {\n        el.setAttribute('aria-hidden', 'true');\n        el.classList.add('ion-page-hidden');\n    }\n    else {\n        el.hidden = false;\n        el.removeAttribute('aria-hidden');\n        el.classList.remove('ion-page-hidden');\n    }\n};\nconst setZIndex = (enteringEl, leavingEl, direction) => {\n    if (enteringEl !== undefined) {\n        enteringEl.style.zIndex = direction === 'back' ? '99' : '101';\n    }\n    if (leavingEl !== undefined) {\n        leavingEl.style.zIndex = '100';\n    }\n};\nconst getIonPageElement = (element) => {\n    if (element.classList.contains('ion-page')) {\n        return element;\n    }\n    const ionPage = element.querySelector(':scope > .ion-page, :scope > ion-nav, :scope > ion-tabs');\n    if (ionPage) {\n        return ionPage;\n    }\n    // idk, return the original element so at least something animates and we don't have a null pointer\n    return element;\n};\n\nexport { LIFECYCLE_WILL_ENTER as L, LIFECYCLE_DID_ENTER as a, LIFECYCLE_WILL_LEAVE as b, LIFECYCLE_DID_LEAVE as c, LIFECYCLE_WILL_UNLOAD as d, deepReady as e, getIonPageElement as g, lifecycle as l, setPageHidden as s, transition as t, waitForMount as w };\n", "import * as i0 from '@angular/core';\nimport { Injectable, Inject, Optional, InjectionToken, inject, NgZone, ApplicationRef, Injector, createComponent, TemplateRef, Directive, ContentChild, EventEmitter, ViewContainerRef, EnvironmentInjector, Attribute, SkipSelf, Input, Output, reflectComponentType, HostListener, ElementRef, ViewChild } from '@angular/core';\nimport * as i3 from '@angular/router';\nimport { NavigationStart, PRIMARY_OUTLET, ChildrenOutletContexts, ActivatedRoute, Router } from '@angular/router';\nimport * as i1 from '@angular/common';\nimport { DOCUMENT } from '@angular/common';\nimport { isPlatform, getPlatforms, LIFECYCLE_WILL_ENTER, LIFECYCLE_DID_ENTER, LIFECYCLE_WILL_LEAVE, LIFECYCLE_DID_LEAVE, LIFECYCLE_WILL_UNLOAD, componentOnReady } from '@ionic/core/components';\nimport { Subject, fromEvent, BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { __decorate } from 'tslib';\nimport { filter, switchMap, distinctUntilChanged } from 'rxjs/operators';\nimport { NgControl } from '@angular/forms';\nconst _c0 = [\"tabsInner\"];\nclass MenuController {\n  constructor(menuController) {\n    this.menuController = menuController;\n  }\n  /**\n   * Programmatically open the Menu.\n   * @param [menuId]  Optionally get the menu by its id, or side.\n   * @return returns a promise when the menu is fully opened\n   */\n  open(menuId) {\n    return this.menuController.open(menuId);\n  }\n  /**\n   * Programmatically close the Menu. If no `menuId` is given as the first\n   * argument then it'll close any menu which is open. If a `menuId`\n   * is given then it'll close that exact menu.\n   * @param [menuId]  Optionally get the menu by its id, or side.\n   * @return returns a promise when the menu is fully closed\n   */\n  close(menuId) {\n    return this.menuController.close(menuId);\n  }\n  /**\n   * Toggle the menu. If it's closed, it will open, and if opened, it\n   * will close.\n   * @param [menuId]  Optionally get the menu by its id, or side.\n   * @return returns a promise when the menu has been toggled\n   */\n  toggle(menuId) {\n    return this.menuController.toggle(menuId);\n  }\n  /**\n   * Used to enable or disable a menu. For example, there could be multiple\n   * left menus, but only one of them should be able to be opened at the same\n   * time. If there are multiple menus on the same side, then enabling one menu\n   * will also automatically disable all the others that are on the same side.\n   * @param [menuId]  Optionally get the menu by its id, or side.\n   * @return Returns the instance of the menu, which is useful for chaining.\n   */\n  enable(shouldEnable, menuId) {\n    return this.menuController.enable(shouldEnable, menuId);\n  }\n  /**\n   * Used to enable or disable the ability to swipe open the menu.\n   * @param shouldEnable  True if it should be swipe-able, false if not.\n   * @param [menuId]  Optionally get the menu by its id, or side.\n   * @return Returns the instance of the menu, which is useful for chaining.\n   */\n  swipeGesture(shouldEnable, menuId) {\n    return this.menuController.swipeGesture(shouldEnable, menuId);\n  }\n  /**\n   * @param [menuId] Optionally get the menu by its id, or side.\n   * @return Returns true if the specified menu is currently open, otherwise false.\n   * If the menuId is not specified, it returns true if ANY menu is currenly open.\n   */\n  isOpen(menuId) {\n    return this.menuController.isOpen(menuId);\n  }\n  /**\n   * @param [menuId]  Optionally get the menu by its id, or side.\n   * @return Returns true if the menu is currently enabled, otherwise false.\n   */\n  isEnabled(menuId) {\n    return this.menuController.isEnabled(menuId);\n  }\n  /**\n   * Used to get a menu instance. If a `menuId` is not provided then it'll\n   * return the first menu found. If a `menuId` is `left` or `right`, then\n   * it'll return the enabled menu on that side. Otherwise, if a `menuId` is\n   * provided, then it'll try to find the menu using the menu's `id`\n   * property. If a menu is not found then it'll return `null`.\n   * @param [menuId]  Optionally get the menu by its id, or side.\n   * @return Returns the instance of the menu if found, otherwise `null`.\n   */\n  get(menuId) {\n    return this.menuController.get(menuId);\n  }\n  /**\n   * @return Returns the instance of the menu already opened, otherwise `null`.\n   */\n  getOpen() {\n    return this.menuController.getOpen();\n  }\n  /**\n   * @return Returns an array of all menu instances.\n   */\n  getMenus() {\n    return this.menuController.getMenus();\n  }\n  registerAnimation(name, animation) {\n    return this.menuController.registerAnimation(name, animation);\n  }\n  isAnimating() {\n    return this.menuController.isAnimating();\n  }\n  _getOpenSync() {\n    return this.menuController._getOpenSync();\n  }\n  _createAnimation(type, menuCmp) {\n    return this.menuController._createAnimation(type, menuCmp);\n  }\n  _register(menu) {\n    return this.menuController._register(menu);\n  }\n  _unregister(menu) {\n    return this.menuController._unregister(menu);\n  }\n  _setOpen(menu, shouldOpen, animated) {\n    return this.menuController._setOpen(menu, shouldOpen, animated);\n  }\n}\nclass DomController {\n  /**\n   * Schedules a task to run during the READ phase of the next frame.\n   * This task should only read the DOM, but never modify it.\n   */\n  read(cb) {\n    getQueue().read(cb);\n  }\n  /**\n   * Schedules a task to run during the WRITE phase of the next frame.\n   * This task should write the DOM, but never READ it.\n   */\n  write(cb) {\n    getQueue().write(cb);\n  }\n}\n/** @nocollapse */\nDomController.\u0275fac = function DomController_Factory(t) {\n  return new (t || DomController)();\n};\n/** @nocollapse */\nDomController.\u0275prov = /* @__PURE__ */i0.\u0275\u0275defineInjectable({\n  token: DomController,\n  factory: DomController.\u0275fac,\n  providedIn: 'root'\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.\u0275setClassMetadata(DomController, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nconst getQueue = () => {\n  const win = typeof window !== 'undefined' ? window : null;\n  if (win != null) {\n    const Ionic = win.Ionic;\n    if (Ionic?.queue) {\n      return Ionic.queue;\n    }\n    return {\n      read: cb => win.requestAnimationFrame(cb),\n      write: cb => win.requestAnimationFrame(cb)\n    };\n  }\n  return {\n    read: cb => cb(),\n    write: cb => cb()\n  };\n};\nclass Platform {\n  constructor(doc, zone) {\n    this.doc = doc;\n    /**\n     * @hidden\n     */\n    this.backButton = new Subject();\n    /**\n     * The keyboardDidShow event emits when the\n     * on-screen keyboard is presented.\n     */\n    this.keyboardDidShow = new Subject();\n    /**\n     * The keyboardDidHide event emits when the\n     * on-screen keyboard is hidden.\n     */\n    this.keyboardDidHide = new Subject();\n    /**\n     * The pause event emits when the native platform puts the application\n     * into the background, typically when the user switches to a different\n     * application. This event would emit when a Cordova app is put into\n     * the background, however, it would not fire on a standard web browser.\n     */\n    this.pause = new Subject();\n    /**\n     * The resume event emits when the native platform pulls the application\n     * out from the background. This event would emit when a Cordova app comes\n     * out from the background, however, it would not fire on a standard web browser.\n     */\n    this.resume = new Subject();\n    /**\n     * The resize event emits when the browser window has changed dimensions. This\n     * could be from a browser window being physically resized, or from a device\n     * changing orientation.\n     */\n    this.resize = new Subject();\n    zone.run(() => {\n      this.win = doc.defaultView;\n      this.backButton.subscribeWithPriority = function (priority, callback) {\n        return this.subscribe(ev => {\n          return ev.register(priority, processNextHandler => zone.run(() => callback(processNextHandler)));\n        });\n      };\n      proxyEvent(this.pause, doc, 'pause', zone);\n      proxyEvent(this.resume, doc, 'resume', zone);\n      proxyEvent(this.backButton, doc, 'ionBackButton', zone);\n      proxyEvent(this.resize, this.win, 'resize', zone);\n      proxyEvent(this.keyboardDidShow, this.win, 'ionKeyboardDidShow', zone);\n      proxyEvent(this.keyboardDidHide, this.win, 'ionKeyboardDidHide', zone);\n      let readyResolve;\n      this._readyPromise = new Promise(res => {\n        readyResolve = res;\n      });\n      if (this.win?.['cordova']) {\n        doc.addEventListener('deviceready', () => {\n          readyResolve('cordova');\n        }, {\n          once: true\n        });\n      } else {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        readyResolve('dom');\n      }\n    });\n  }\n  /**\n   * @returns returns true/false based on platform.\n   * @description\n   * Depending on the platform the user is on, `is(platformName)` will\n   * return `true` or `false`. Note that the same app can return `true`\n   * for more than one platform name. For example, an app running from\n   * an iPad would return `true` for the platform names: `mobile`,\n   * `ios`, `ipad`, and `tablet`. Additionally, if the app was running\n   * from Cordova then `cordova` would be true, and if it was running\n   * from a web browser on the iPad then `mobileweb` would be `true`.\n   *\n   * ```\n   * import { Platform } from 'ionic-angular';\n   *\n   * @Component({...})\n   * export MyPage {\n   *   constructor(public platform: Platform) {\n   *     if (this.platform.is('ios')) {\n   *       // This will only print when on iOS\n   *       console.log('I am an iOS device!');\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * | Platform Name   | Description                        |\n   * |-----------------|------------------------------------|\n   * | android         | on a device running Android.       |\n   * | capacitor       | on a device running Capacitor.     |\n   * | cordova         | on a device running Cordova.       |\n   * | ios             | on a device running iOS.           |\n   * | ipad            | on an iPad device.                 |\n   * | iphone          | on an iPhone device.               |\n   * | phablet         | on a phablet device.               |\n   * | tablet          | on a tablet device.                |\n   * | electron        | in Electron on a desktop device.   |\n   * | pwa             | as a PWA app.                      |\n   * | mobile          | on a mobile device.                |\n   * | mobileweb       | on a mobile device in a browser.   |\n   * | desktop         | on a desktop device.               |\n   * | hybrid          | is a cordova or capacitor app.     |\n   *\n   */\n  is(platformName) {\n    return isPlatform(this.win, platformName);\n  }\n  /**\n   * @returns the array of platforms\n   * @description\n   * Depending on what device you are on, `platforms` can return multiple values.\n   * Each possible value is a hierarchy of platforms. For example, on an iPhone,\n   * it would return `mobile`, `ios`, and `iphone`.\n   *\n   * ```\n   * import { Platform } from 'ionic-angular';\n   *\n   * @Component({...})\n   * export MyPage {\n   *   constructor(public platform: Platform) {\n   *     // This will print an array of the current platforms\n   *     console.log(this.platform.platforms());\n   *   }\n   * }\n   * ```\n   */\n  platforms() {\n    return getPlatforms(this.win);\n  }\n  /**\n   * Returns a promise when the platform is ready and native functionality\n   * can be called. If the app is running from within a web browser, then\n   * the promise will resolve when the DOM is ready. When the app is running\n   * from an application engine such as Cordova, then the promise will\n   * resolve when Cordova triggers the `deviceready` event.\n   *\n   * The resolved value is the `readySource`, which states which platform\n   * ready was used. For example, when Cordova is ready, the resolved ready\n   * source is `cordova`. The default ready source value will be `dom`. The\n   * `readySource` is useful if different logic should run depending on the\n   * platform the app is running from. For example, only Cordova can execute\n   * the status bar plugin, so the web should not run status bar plugin logic.\n   *\n   * ```\n   * import { Component } from '@angular/core';\n   * import { Platform } from 'ionic-angular';\n   *\n   * @Component({...})\n   * export MyApp {\n   *   constructor(public platform: Platform) {\n   *     this.platform.ready().then((readySource) => {\n   *       console.log('Platform ready from', readySource);\n   *       // Platform now ready, execute any required native code\n   *     });\n   *   }\n   * }\n   * ```\n   */\n  ready() {\n    return this._readyPromise;\n  }\n  /**\n   * Returns if this app is using right-to-left language direction or not.\n   * We recommend the app's `index.html` file already has the correct `dir`\n   * attribute value set, such as `<html dir=\"ltr\">` or `<html dir=\"rtl\">`.\n   * [W3C: Structural markup and right-to-left text in HTML](http://www.w3.org/International/questions/qa-html-dir)\n   */\n  get isRTL() {\n    return this.doc.dir === 'rtl';\n  }\n  /**\n   * Get the query string parameter\n   */\n  getQueryParam(key) {\n    return readQueryParam(this.win.location.href, key);\n  }\n  /**\n   * Returns `true` if the app is in landscape mode.\n   */\n  isLandscape() {\n    return !this.isPortrait();\n  }\n  /**\n   * Returns `true` if the app is in portrait mode.\n   */\n  isPortrait() {\n    return this.win.matchMedia?.('(orientation: portrait)').matches;\n  }\n  testUserAgent(expression) {\n    const nav = this.win.navigator;\n    return !!(nav?.userAgent && nav.userAgent.indexOf(expression) >= 0);\n  }\n  /**\n   * Get the current url.\n   */\n  url() {\n    return this.win.location.href;\n  }\n  /**\n   * Gets the width of the platform's viewport using `window.innerWidth`.\n   */\n  width() {\n    return this.win.innerWidth;\n  }\n  /**\n   * Gets the height of the platform's viewport using `window.innerHeight`.\n   */\n  height() {\n    return this.win.innerHeight;\n  }\n}\n/** @nocollapse */\nPlatform.\u0275fac = function Platform_Factory(t) {\n  return new (t || Platform)(i0.\u0275\u0275inject(DOCUMENT), i0.\u0275\u0275inject(i0.NgZone));\n};\n/** @nocollapse */\nPlatform.\u0275prov = /* @__PURE__ */i0.\u0275\u0275defineInjectable({\n  token: Platform,\n  factory: Platform.\u0275fac,\n  providedIn: 'root'\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.\u0275setClassMetadata(Platform, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i0.NgZone\n    }];\n  }, null);\n})();\nconst readQueryParam = (url, key) => {\n  key = key.replace(/[[\\]\\\\]/g, '\\\\$&');\n  const regex = new RegExp('[\\\\?&]' + key + '=([^&#]*)');\n  const results = regex.exec(url);\n  return results ? decodeURIComponent(results[1].replace(/\\+/g, ' ')) : null;\n};\nconst proxyEvent = (emitter, el, eventName, zone) => {\n  if (el) {\n    el.addEventListener(eventName, ev => {\n      /**\n       * `zone.run` is required to make sure that we are running inside the Angular zone\n       * at all times. This is necessary since an app that has Capacitor will\n       * override the `document.addEventListener` with its own implementation.\n       * The override causes the event to no longer be in the Angular zone.\n       */\n      zone.run(() => {\n        // ?? cordova might emit \"null\" events\n        const value = ev != null ? ev.detail : undefined;\n        emitter.next(value);\n      });\n    });\n  }\n};\nclass NavController {\n  constructor(platform, location, serializer, router) {\n    this.location = location;\n    this.serializer = serializer;\n    this.router = router;\n    this.direction = DEFAULT_DIRECTION;\n    this.animated = DEFAULT_ANIMATED;\n    this.guessDirection = 'forward';\n    this.lastNavId = -1;\n    // Subscribe to router events to detect direction\n    if (router) {\n      router.events.subscribe(ev => {\n        if (ev instanceof NavigationStart) {\n          const id = ev.restoredState ? ev.restoredState.navigationId : ev.id;\n          this.guessDirection = id < this.lastNavId ? 'back' : 'forward';\n          this.guessAnimation = !ev.restoredState ? this.guessDirection : undefined;\n          this.lastNavId = this.guessDirection === 'forward' ? ev.id : id;\n        }\n      });\n    }\n    // Subscribe to backButton events\n    platform.backButton.subscribeWithPriority(0, processNextHandler => {\n      this.pop();\n      processNextHandler();\n    });\n  }\n  /**\n   * This method uses Angular's [Router](https://angular.io/api/router/Router) under the hood,\n   * it's equivalent to calling `this.router.navigateByUrl()`, but it's explicit about the **direction** of the transition.\n   *\n   * Going **forward** means that a new page is going to be pushed to the stack of the outlet (ion-router-outlet),\n   * and that it will show a \"forward\" animation by default.\n   *\n   * Navigating forward can also be triggered in a declarative manner by using the `[routerDirection]` directive:\n   *\n   * ```html\n   * <a routerLink=\"/path/to/page\" routerDirection=\"forward\">Link</a>\n   * ```\n   */\n  navigateForward(url, options = {}) {\n    this.setDirection('forward', options.animated, options.animationDirection, options.animation);\n    return this.navigate(url, options);\n  }\n  /**\n   * This method uses Angular's [Router](https://angular.io/api/router/Router) under the hood,\n   * it's equivalent to calling:\n   *\n   * ```ts\n   * this.navController.setDirection('back');\n   * this.router.navigateByUrl(path);\n   * ```\n   *\n   * Going **back** means that all the pages in the stack until the navigated page is found will be popped,\n   * and that it will show a \"back\" animation by default.\n   *\n   * Navigating back can also be triggered in a declarative manner by using the `[routerDirection]` directive:\n   *\n   * ```html\n   * <a routerLink=\"/path/to/page\" routerDirection=\"back\">Link</a>\n   * ```\n   */\n  navigateBack(url, options = {}) {\n    this.setDirection('back', options.animated, options.animationDirection, options.animation);\n    return this.navigate(url, options);\n  }\n  /**\n   * This method uses Angular's [Router](https://angular.io/api/router/Router) under the hood,\n   * it's equivalent to calling:\n   *\n   * ```ts\n   * this.navController.setDirection('root');\n   * this.router.navigateByUrl(path);\n   * ```\n   *\n   * Going **root** means that all existing pages in the stack will be removed,\n   * and the navigated page will become the single page in the stack.\n   *\n   * Navigating root can also be triggered in a declarative manner by using the `[routerDirection]` directive:\n   *\n   * ```html\n   * <a routerLink=\"/path/to/page\" routerDirection=\"root\">Link</a>\n   * ```\n   */\n  navigateRoot(url, options = {}) {\n    this.setDirection('root', options.animated, options.animationDirection, options.animation);\n    return this.navigate(url, options);\n  }\n  /**\n   * Same as [Location](https://angular.io/api/common/Location)'s back() method.\n   * It will use the standard `window.history.back()` under the hood, but featuring a `back` animation\n   * by default.\n   */\n  back(options = {\n    animated: true,\n    animationDirection: 'back'\n  }) {\n    this.setDirection('back', options.animated, options.animationDirection, options.animation);\n    return this.location.back();\n  }\n  /**\n   * This methods goes back in the context of Ionic's stack navigation.\n   *\n   * It recursively finds the top active `ion-router-outlet` and calls `pop()`.\n   * This is the recommended way to go back when you are using `ion-router-outlet`.\n   *\n   * Resolves to `true` if it was able to pop.\n   */\n  async pop() {\n    let outlet = this.topOutlet;\n    while (outlet) {\n      if (await outlet.pop()) {\n        return true;\n      } else {\n        outlet = outlet.parentOutlet;\n      }\n    }\n    return false;\n  }\n  /**\n   * This methods specifies the direction of the next navigation performed by the Angular router.\n   *\n   * `setDirection()` does not trigger any transition, it just sets some flags to be consumed by `ion-router-outlet`.\n   *\n   * It's recommended to use `navigateForward()`, `navigateBack()` and `navigateRoot()` instead of `setDirection()`.\n   */\n  setDirection(direction, animated, animationDirection, animationBuilder) {\n    this.direction = direction;\n    this.animated = getAnimation(direction, animated, animationDirection);\n    this.animationBuilder = animationBuilder;\n  }\n  /**\n   * @internal\n   */\n  setTopOutlet(outlet) {\n    this.topOutlet = outlet;\n  }\n  /**\n   * @internal\n   */\n  consumeTransition() {\n    let direction = 'root';\n    let animation;\n    const animationBuilder = this.animationBuilder;\n    if (this.direction === 'auto') {\n      direction = this.guessDirection;\n      animation = this.guessAnimation;\n    } else {\n      animation = this.animated;\n      direction = this.direction;\n    }\n    this.direction = DEFAULT_DIRECTION;\n    this.animated = DEFAULT_ANIMATED;\n    this.animationBuilder = undefined;\n    return {\n      direction,\n      animation,\n      animationBuilder\n    };\n  }\n  navigate(url, options) {\n    if (Array.isArray(url)) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      return this.router.navigate(url, options);\n    } else {\n      /**\n       * navigateByUrl ignores any properties that\n       * would change the url, so things like queryParams\n       * would be ignored unless we create a url tree\n       * More Info: https://github.com/angular/angular/issues/18798\n       */\n      const urlTree = this.serializer.parse(url.toString());\n      if (options.queryParams !== undefined) {\n        urlTree.queryParams = {\n          ...options.queryParams\n        };\n      }\n      if (options.fragment !== undefined) {\n        urlTree.fragment = options.fragment;\n      }\n      /**\n       * `navigateByUrl` will still apply `NavigationExtras` properties\n       * that do not modify the url, such as `replaceUrl` which is why\n       * `options` is passed in here.\n       */\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      return this.router.navigateByUrl(urlTree, options);\n    }\n  }\n}\n/** @nocollapse */\nNavController.\u0275fac = function NavController_Factory(t) {\n  return new (t || NavController)(i0.\u0275\u0275inject(Platform), i0.\u0275\u0275inject(i1.Location), i0.\u0275\u0275inject(i3.UrlSerializer), i0.\u0275\u0275inject(i3.Router, 8));\n};\n/** @nocollapse */\nNavController.\u0275prov = /* @__PURE__ */i0.\u0275\u0275defineInjectable({\n  token: NavController,\n  factory: NavController.\u0275fac,\n  providedIn: 'root'\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.\u0275setClassMetadata(NavController, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: Platform\n    }, {\n      type: i1.Location\n    }, {\n      type: i3.UrlSerializer\n    }, {\n      type: i3.Router,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\nconst getAnimation = (direction, animated, animationDirection) => {\n  if (animated === false) {\n    return undefined;\n  }\n  if (animationDirection !== undefined) {\n    return animationDirection;\n  }\n  if (direction === 'forward' || direction === 'back') {\n    return direction;\n  } else if (direction === 'root' && animated === true) {\n    return 'forward';\n  }\n  return undefined;\n};\nconst DEFAULT_DIRECTION = 'auto';\nconst DEFAULT_ANIMATED = undefined;\nclass Config {\n  get(key, fallback) {\n    const c = getConfig();\n    if (c) {\n      return c.get(key, fallback);\n    }\n    return null;\n  }\n  getBoolean(key, fallback) {\n    const c = getConfig();\n    if (c) {\n      return c.getBoolean(key, fallback);\n    }\n    return false;\n  }\n  getNumber(key, fallback) {\n    const c = getConfig();\n    if (c) {\n      return c.getNumber(key, fallback);\n    }\n    return 0;\n  }\n}\n/** @nocollapse */\nConfig.\u0275fac = function Config_Factory(t) {\n  return new (t || Config)();\n};\n/** @nocollapse */\nConfig.\u0275prov = /* @__PURE__ */i0.\u0275\u0275defineInjectable({\n  token: Config,\n  factory: Config.\u0275fac,\n  providedIn: 'root'\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.\u0275setClassMetadata(Config, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nconst ConfigToken = new InjectionToken('USERCONFIG');\nconst getConfig = () => {\n  if (typeof window !== 'undefined') {\n    const Ionic = window.Ionic;\n    if (Ionic?.config) {\n      return Ionic.config;\n    }\n  }\n  return null;\n};\n\n/**\n * @description\n * NavParams are an object that exists on a page and can contain data for that particular view.\n * Similar to how data was pass to a view in V1 with `$stateParams`, NavParams offer a much more flexible\n * option with a simple `get` method.\n *\n * @usage\n * ```ts\n * import { NavParams } from '@ionic/angular';\n *\n * export class MyClass{\n *\n *  constructor(navParams: NavParams){\n *    // userParams is an object we have in our nav-parameters\n *    navParams.get('userParams');\n *  }\n *\n * }\n * ```\n */\nclass NavParams {\n  constructor(data = {}) {\n    this.data = data;\n  }\n  /**\n   * Get the value of a nav-parameter for the current view\n   *\n   * ```ts\n   * import { NavParams } from 'ionic-angular';\n   *\n   * export class MyClass{\n   *  constructor(public navParams: NavParams){\n   *    // userParams is an object we have in our nav-parameters\n   *    this.navParams.get('userParams');\n   *  }\n   * }\n   * ```\n   *\n   * @param param Which param you want to look up\n   */\n  get(param) {\n    return this.data[param];\n  }\n}\n\n// TODO(FW-2827): types\nclass AngularDelegate {\n  constructor() {\n    this.zone = inject(NgZone);\n    this.applicationRef = inject(ApplicationRef);\n  }\n  create(environmentInjector, injector, elementReferenceKey) {\n    return new AngularFrameworkDelegate(environmentInjector, injector, this.applicationRef, this.zone, elementReferenceKey);\n  }\n}\n/** @nocollapse */\nAngularDelegate.\u0275fac = function AngularDelegate_Factory(t) {\n  return new (t || AngularDelegate)();\n};\n/** @nocollapse */\nAngularDelegate.\u0275prov = /* @__PURE__ */i0.\u0275\u0275defineInjectable({\n  token: AngularDelegate,\n  factory: AngularDelegate.\u0275fac\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.\u0275setClassMetadata(AngularDelegate, [{\n    type: Injectable\n  }], null, null);\n})();\nclass AngularFrameworkDelegate {\n  constructor(environmentInjector, injector, applicationRef, zone, elementReferenceKey) {\n    this.environmentInjector = environmentInjector;\n    this.injector = injector;\n    this.applicationRef = applicationRef;\n    this.zone = zone;\n    this.elementReferenceKey = elementReferenceKey;\n    this.elRefMap = new WeakMap();\n    this.elEventsMap = new WeakMap();\n  }\n  attachViewToDom(container, component, params, cssClasses) {\n    return this.zone.run(() => {\n      return new Promise(resolve => {\n        const componentProps = {\n          ...params\n        };\n        /**\n         * Ionic Angular passes a reference to a modal\n         * or popover that can be accessed using a\n         * variable in the overlay component. If\n         * elementReferenceKey is defined, then we should\n         * pass a reference to the component using\n         * elementReferenceKey as the key.\n         */\n        if (this.elementReferenceKey !== undefined) {\n          componentProps[this.elementReferenceKey] = container;\n        }\n        const el = attachView(this.zone, this.environmentInjector, this.injector, this.applicationRef, this.elRefMap, this.elEventsMap, container, component, componentProps, cssClasses, this.elementReferenceKey);\n        resolve(el);\n      });\n    });\n  }\n  removeViewFromDom(_container, component) {\n    return this.zone.run(() => {\n      return new Promise(resolve => {\n        const componentRef = this.elRefMap.get(component);\n        if (componentRef) {\n          componentRef.destroy();\n          this.elRefMap.delete(component);\n          const unbindEvents = this.elEventsMap.get(component);\n          if (unbindEvents) {\n            unbindEvents();\n            this.elEventsMap.delete(component);\n          }\n        }\n        resolve();\n      });\n    });\n  }\n}\nconst attachView = (zone, environmentInjector, injector, applicationRef, elRefMap, elEventsMap, container, component, params, cssClasses, elementReferenceKey) => {\n  /**\n   * Wraps the injector with a custom injector that\n   * provides NavParams to the component.\n   *\n   * NavParams is a legacy feature from Ionic v3 that allows\n   * Angular developers to provide data to a component\n   * and access it by providing NavParams as a dependency\n   * in the constructor.\n   *\n   * The modern approach is to access the data directly\n   * from the component's class instance.\n   */\n  const childInjector = Injector.create({\n    providers: getProviders(params),\n    parent: injector\n  });\n  const componentRef = createComponent(component, {\n    environmentInjector,\n    elementInjector: childInjector\n  });\n  const instance = componentRef.instance;\n  const hostElement = componentRef.location.nativeElement;\n  if (params) {\n    /**\n     * For modals and popovers, a reference to the component is\n     * added to `params` during the call to attachViewToDom. If\n     * a reference using this name is already set, this means\n     * the app is trying to use the name as a component prop,\n     * which will cause collisions.\n     */\n    if (elementReferenceKey && instance[elementReferenceKey] !== undefined) {\n      console.error(`[Ionic Error]: ${elementReferenceKey} is a reserved property when using ${container.tagName.toLowerCase()}. Rename or remove the \"${elementReferenceKey}\" property from ${component.name}.`);\n    }\n    Object.assign(instance, params);\n  }\n  if (cssClasses) {\n    for (const cssClass of cssClasses) {\n      hostElement.classList.add(cssClass);\n    }\n  }\n  const unbindEvents = bindLifecycleEvents(zone, instance, hostElement);\n  container.appendChild(hostElement);\n  applicationRef.attachView(componentRef.hostView);\n  elRefMap.set(hostElement, componentRef);\n  elEventsMap.set(hostElement, unbindEvents);\n  return hostElement;\n};\nconst LIFECYCLES = [LIFECYCLE_WILL_ENTER, LIFECYCLE_DID_ENTER, LIFECYCLE_WILL_LEAVE, LIFECYCLE_DID_LEAVE, LIFECYCLE_WILL_UNLOAD];\nconst bindLifecycleEvents = (zone, instance, element) => {\n  return zone.run(() => {\n    const unregisters = LIFECYCLES.filter(eventName => typeof instance[eventName] === 'function').map(eventName => {\n      const handler = ev => instance[eventName](ev.detail);\n      element.addEventListener(eventName, handler);\n      return () => element.removeEventListener(eventName, handler);\n    });\n    return () => unregisters.forEach(fn => fn());\n  });\n};\nconst NavParamsToken = new InjectionToken('NavParamsToken');\nconst getProviders = params => {\n  return [{\n    provide: NavParamsToken,\n    useValue: params\n  }, {\n    provide: NavParams,\n    useFactory: provideNavParamsInjectable,\n    deps: [NavParamsToken]\n  }];\n};\nconst provideNavParamsInjectable = params => {\n  return new NavParams(params);\n};\n\n// TODO: Is there a way we can grab this from angular-component-lib instead?\nconst proxyInputs = (Cmp, inputs) => {\n  const Prototype = Cmp.prototype;\n  inputs.forEach(item => {\n    Object.defineProperty(Prototype, item, {\n      get() {\n        return this.el[item];\n      },\n      set(val) {\n        this.z.runOutsideAngular(() => this.el[item] = val);\n      }\n    });\n  });\n};\nconst proxyMethods = (Cmp, methods) => {\n  const Prototype = Cmp.prototype;\n  methods.forEach(methodName => {\n    Prototype[methodName] = function () {\n      const args = arguments;\n      return this.z.runOutsideAngular(() => this.el[methodName].apply(this.el, args));\n    };\n  });\n};\nconst proxyOutputs = (instance, el, events) => {\n  events.forEach(eventName => instance[eventName] = fromEvent(el, eventName));\n};\n// tslint:disable-next-line: only-arrow-functions\nfunction ProxyCmp(opts) {\n  const decorator = function (cls) {\n    const {\n      defineCustomElementFn,\n      inputs,\n      methods\n    } = opts;\n    if (defineCustomElementFn !== undefined) {\n      defineCustomElementFn();\n    }\n    if (inputs) {\n      proxyInputs(cls, inputs);\n    }\n    if (methods) {\n      proxyMethods(cls, methods);\n    }\n    return cls;\n  };\n  return decorator;\n}\nconst POPOVER_INPUTS = ['alignment', 'animated', 'arrow', 'keepContentsMounted', 'backdropDismiss', 'cssClass', 'dismissOnSelect', 'enterAnimation', 'event', 'isOpen', 'keyboardClose', 'leaveAnimation', 'mode', 'showBackdrop', 'translucent', 'trigger', 'triggerAction', 'reference', 'size', 'side'];\nconst POPOVER_METHODS = ['present', 'dismiss', 'onDidDismiss', 'onWillDismiss'];\nlet IonPopover = class IonPopover {\n  constructor(c, r, z) {\n    this.z = z;\n    this.isCmpOpen = false;\n    this.el = r.nativeElement;\n    this.el.addEventListener('ionMount', () => {\n      this.isCmpOpen = true;\n      c.detectChanges();\n    });\n    this.el.addEventListener('didDismiss', () => {\n      this.isCmpOpen = false;\n      c.detectChanges();\n    });\n    proxyOutputs(this, this.el, ['ionPopoverDidPresent', 'ionPopoverWillPresent', 'ionPopoverWillDismiss', 'ionPopoverDidDismiss', 'didPresent', 'willPresent', 'willDismiss', 'didDismiss']);\n  }\n};\n/** @nocollapse */\nIonPopover.\u0275fac = function IonPopover_Factory(t) {\n  return new (t || IonPopover)(i0.\u0275\u0275directiveInject(i0.ChangeDetectorRef), i0.\u0275\u0275directiveInject(i0.ElementRef), i0.\u0275\u0275directiveInject(i0.NgZone));\n};\n/** @nocollapse */\nIonPopover.\u0275dir = /* @__PURE__ */i0.\u0275\u0275defineDirective({\n  type: IonPopover,\n  selectors: [[\"ion-popover\"]],\n  contentQueries: function IonPopover_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.\u0275\u0275contentQuery(dirIndex, TemplateRef, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.\u0275\u0275queryRefresh(_t = i0.\u0275\u0275loadQuery()) && (ctx.template = _t.first);\n    }\n  },\n  inputs: {\n    alignment: \"alignment\",\n    animated: \"animated\",\n    arrow: \"arrow\",\n    keepContentsMounted: \"keepContentsMounted\",\n    backdropDismiss: \"backdropDismiss\",\n    cssClass: \"cssClass\",\n    dismissOnSelect: \"dismissOnSelect\",\n    enterAnimation: \"enterAnimation\",\n    event: \"event\",\n    isOpen: \"isOpen\",\n    keyboardClose: \"keyboardClose\",\n    leaveAnimation: \"leaveAnimation\",\n    mode: \"mode\",\n    showBackdrop: \"showBackdrop\",\n    translucent: \"translucent\",\n    trigger: \"trigger\",\n    triggerAction: \"triggerAction\",\n    reference: \"reference\",\n    size: \"size\",\n    side: \"side\"\n  }\n});\nIonPopover = __decorate([ProxyCmp({\n  inputs: POPOVER_INPUTS,\n  methods: POPOVER_METHODS\n})\n/**\n * @Component extends from @Directive\n * so by defining the inputs here we\n * do not need to re-define them for the\n * lazy loaded popover.\n */], IonPopover);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.\u0275setClassMetadata(IonPopover, [{\n    type: Directive,\n    args: [{\n      selector: 'ion-popover',\n      // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n      inputs: POPOVER_INPUTS\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    template: [{\n      type: ContentChild,\n      args: [TemplateRef, {\n        static: false\n      }]\n    }]\n  });\n})();\nconst MODAL_INPUTS = ['animated', 'keepContentsMounted', 'backdropBreakpoint', 'backdropDismiss', 'breakpoints', 'canDismiss', 'cssClass', 'enterAnimation', 'event', 'handle', 'handleBehavior', 'initialBreakpoint', 'isOpen', 'keyboardClose', 'leaveAnimation', 'mode', 'presentingElement', 'showBackdrop', 'translucent', 'trigger'];\nconst MODAL_METHODS = ['present', 'dismiss', 'onDidDismiss', 'onWillDismiss', 'setCurrentBreakpoint', 'getCurrentBreakpoint'];\nlet IonModal = class IonModal {\n  constructor(c, r, z) {\n    this.z = z;\n    this.isCmpOpen = false;\n    this.el = r.nativeElement;\n    this.el.addEventListener('ionMount', () => {\n      this.isCmpOpen = true;\n      c.detectChanges();\n    });\n    this.el.addEventListener('didDismiss', () => {\n      this.isCmpOpen = false;\n      c.detectChanges();\n    });\n    proxyOutputs(this, this.el, ['ionModalDidPresent', 'ionModalWillPresent', 'ionModalWillDismiss', 'ionModalDidDismiss', 'ionBreakpointDidChange', 'didPresent', 'willPresent', 'willDismiss', 'didDismiss']);\n  }\n};\n/** @nocollapse */\nIonModal.\u0275fac = function IonModal_Factory(t) {\n  return new (t || IonModal)(i0.\u0275\u0275directiveInject(i0.ChangeDetectorRef), i0.\u0275\u0275directiveInject(i0.ElementRef), i0.\u0275\u0275directiveInject(i0.NgZone));\n};\n/** @nocollapse */\nIonModal.\u0275dir = /* @__PURE__ */i0.\u0275\u0275defineDirective({\n  type: IonModal,\n  selectors: [[\"ion-modal\"]],\n  contentQueries: function IonModal_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.\u0275\u0275contentQuery(dirIndex, TemplateRef, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.\u0275\u0275queryRefresh(_t = i0.\u0275\u0275loadQuery()) && (ctx.template = _t.first);\n    }\n  },\n  inputs: {\n    animated: \"animated\",\n    keepContentsMounted: \"keepContentsMounted\",\n    backdropBreakpoint: \"backdropBreakpoint\",\n    backdropDismiss: \"backdropDismiss\",\n    breakpoints: \"breakpoints\",\n    canDismiss: \"canDismiss\",\n    cssClass: \"cssClass\",\n    enterAnimation: \"enterAnimation\",\n    event: \"event\",\n    handle: \"handle\",\n    handleBehavior: \"handleBehavior\",\n    initialBreakpoint: \"initialBreakpoint\",\n    isOpen: \"isOpen\",\n    keyboardClose: \"keyboardClose\",\n    leaveAnimation: \"leaveAnimation\",\n    mode: \"mode\",\n    presentingElement: \"presentingElement\",\n    showBackdrop: \"showBackdrop\",\n    translucent: \"translucent\",\n    trigger: \"trigger\"\n  }\n});\nIonModal = __decorate([ProxyCmp({\n  inputs: MODAL_INPUTS,\n  methods: MODAL_METHODS\n})\n/**\n * @Component extends from @Directive\n * so by defining the inputs here we\n * do not need to re-define them for the\n * lazy loaded popover.\n */], IonModal);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.\u0275setClassMetadata(IonModal, [{\n    type: Directive,\n    args: [{\n      selector: 'ion-modal',\n      // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n      inputs: MODAL_INPUTS\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    template: [{\n      type: ContentChild,\n      args: [TemplateRef, {\n        static: false\n      }]\n    }]\n  });\n})();\nconst insertView = (views, view, direction) => {\n  if (direction === 'root') {\n    return setRoot(views, view);\n  } else if (direction === 'forward') {\n    return setForward(views, view);\n  } else {\n    return setBack(views, view);\n  }\n};\nconst setRoot = (views, view) => {\n  views = views.filter(v => v.stackId !== view.stackId);\n  views.push(view);\n  return views;\n};\nconst setForward = (views, view) => {\n  const index = views.indexOf(view);\n  if (index >= 0) {\n    views = views.filter(v => v.stackId !== view.stackId || v.id <= view.id);\n  } else {\n    views.push(view);\n  }\n  return views;\n};\nconst setBack = (views, view) => {\n  const index = views.indexOf(view);\n  if (index >= 0) {\n    return views.filter(v => v.stackId !== view.stackId || v.id <= view.id);\n  } else {\n    return setRoot(views, view);\n  }\n};\nconst getUrl = (router, activatedRoute) => {\n  const urlTree = router.createUrlTree(['.'], {\n    relativeTo: activatedRoute\n  });\n  return router.serializeUrl(urlTree);\n};\nconst isTabSwitch = (enteringView, leavingView) => {\n  if (!leavingView) {\n    return true;\n  }\n  return enteringView.stackId !== leavingView.stackId;\n};\nconst computeStackId = (prefixUrl, url) => {\n  if (!prefixUrl) {\n    return undefined;\n  }\n  const segments = toSegments(url);\n  for (let i = 0; i < segments.length; i++) {\n    if (i >= prefixUrl.length) {\n      return segments[i];\n    }\n    if (segments[i] !== prefixUrl[i]) {\n      return undefined;\n    }\n  }\n  return undefined;\n};\nconst toSegments = path => {\n  return path.split('/').map(s => s.trim()).filter(s => s !== '');\n};\nconst destroyView = view => {\n  if (view) {\n    view.ref.destroy();\n    view.unlistenEvents();\n  }\n};\n\n// TODO(FW-2827): types\nclass StackController {\n  constructor(tabsPrefix, containerEl, router, navCtrl, zone, location) {\n    this.containerEl = containerEl;\n    this.router = router;\n    this.navCtrl = navCtrl;\n    this.zone = zone;\n    this.location = location;\n    this.views = [];\n    this.skipTransition = false;\n    this.nextId = 0;\n    this.tabsPrefix = tabsPrefix !== undefined ? toSegments(tabsPrefix) : undefined;\n  }\n  createView(ref, activatedRoute) {\n    const url = getUrl(this.router, activatedRoute);\n    const element = ref?.location?.nativeElement;\n    const unlistenEvents = bindLifecycleEvents(this.zone, ref.instance, element);\n    return {\n      id: this.nextId++,\n      stackId: computeStackId(this.tabsPrefix, url),\n      unlistenEvents,\n      element,\n      ref,\n      url\n    };\n  }\n  getExistingView(activatedRoute) {\n    const activatedUrlKey = getUrl(this.router, activatedRoute);\n    const view = this.views.find(vw => vw.url === activatedUrlKey);\n    if (view) {\n      view.ref.changeDetectorRef.reattach();\n    }\n    return view;\n  }\n  setActive(enteringView) {\n    const consumeResult = this.navCtrl.consumeTransition();\n    let {\n      direction,\n      animation,\n      animationBuilder\n    } = consumeResult;\n    const leavingView = this.activeView;\n    const tabSwitch = isTabSwitch(enteringView, leavingView);\n    if (tabSwitch) {\n      direction = 'back';\n      animation = undefined;\n    }\n    const viewsSnapshot = this.views.slice();\n    let currentNavigation;\n    const router = this.router;\n    // Angular >= 7.2.0\n    if (router.getCurrentNavigation) {\n      currentNavigation = router.getCurrentNavigation();\n      // Angular < 7.2.0\n    } else if (router.navigations?.value) {\n      currentNavigation = router.navigations.value;\n    }\n    /**\n     * If the navigation action\n     * sets `replaceUrl: true`\n     * then we need to make sure\n     * we remove the last item\n     * from our views stack\n     */\n    if (currentNavigation?.extras?.replaceUrl) {\n      if (this.views.length > 0) {\n        this.views.splice(-1, 1);\n      }\n    }\n    const reused = this.views.includes(enteringView);\n    const views = this.insertView(enteringView, direction);\n    // Trigger change detection before transition starts\n    // This will call ngOnInit() the first time too, just after the view\n    // was attached to the dom, but BEFORE the transition starts\n    if (!reused) {\n      enteringView.ref.changeDetectorRef.detectChanges();\n    }\n    /**\n     * If we are going back from a page that\n     * was presented using a custom animation\n     * we should default to using that\n     * unless the developer explicitly\n     * provided another animation.\n     */\n    const customAnimation = enteringView.animationBuilder;\n    if (animationBuilder === undefined && direction === 'back' && !tabSwitch && customAnimation !== undefined) {\n      animationBuilder = customAnimation;\n    }\n    /**\n     * Save any custom animation so that navigating\n     * back will use this custom animation by default.\n     */\n    if (leavingView) {\n      leavingView.animationBuilder = animationBuilder;\n    }\n    // Wait until previous transitions finish\n    return this.zone.runOutsideAngular(() => {\n      return this.wait(() => {\n        // disconnect leaving page from change detection to\n        // reduce jank during the page transition\n        if (leavingView) {\n          leavingView.ref.changeDetectorRef.detach();\n        }\n        // In case the enteringView is the same as the leavingPage we need to reattach()\n        enteringView.ref.changeDetectorRef.reattach();\n        return this.transition(enteringView, leavingView, animation, this.canGoBack(1), false, animationBuilder).then(() => cleanupAsync(enteringView, views, viewsSnapshot, this.location, this.zone)).then(() => ({\n          enteringView,\n          direction,\n          animation,\n          tabSwitch\n        }));\n      });\n    });\n  }\n  canGoBack(deep, stackId = this.getActiveStackId()) {\n    return this.getStack(stackId).length > deep;\n  }\n  pop(deep, stackId = this.getActiveStackId()) {\n    return this.zone.run(() => {\n      const views = this.getStack(stackId);\n      if (views.length <= deep) {\n        return Promise.resolve(false);\n      }\n      const view = views[views.length - deep - 1];\n      let url = view.url;\n      const viewSavedData = view.savedData;\n      if (viewSavedData) {\n        const primaryOutlet = viewSavedData.get('primary');\n        if (primaryOutlet?.route?._routerState?.snapshot.url) {\n          url = primaryOutlet.route._routerState.snapshot.url;\n        }\n      }\n      const {\n        animationBuilder\n      } = this.navCtrl.consumeTransition();\n      return this.navCtrl.navigateBack(url, {\n        ...view.savedExtras,\n        animation: animationBuilder\n      }).then(() => true);\n    });\n  }\n  startBackTransition() {\n    const leavingView = this.activeView;\n    if (leavingView) {\n      const views = this.getStack(leavingView.stackId);\n      const enteringView = views[views.length - 2];\n      const customAnimation = enteringView.animationBuilder;\n      return this.wait(() => {\n        return this.transition(enteringView,\n        // entering view\n        leavingView,\n        // leaving view\n        'back', this.canGoBack(2), true, customAnimation);\n      });\n    }\n    return Promise.resolve();\n  }\n  endBackTransition(shouldComplete) {\n    if (shouldComplete) {\n      this.skipTransition = true;\n      this.pop(1);\n    } else if (this.activeView) {\n      cleanup(this.activeView, this.views, this.views, this.location, this.zone);\n    }\n  }\n  getLastUrl(stackId) {\n    const views = this.getStack(stackId);\n    return views.length > 0 ? views[views.length - 1] : undefined;\n  }\n  /**\n   * @internal\n   */\n  getRootUrl(stackId) {\n    const views = this.getStack(stackId);\n    return views.length > 0 ? views[0] : undefined;\n  }\n  getActiveStackId() {\n    return this.activeView ? this.activeView.stackId : undefined;\n  }\n  /**\n   * @internal\n   */\n  getActiveView() {\n    return this.activeView;\n  }\n  hasRunningTask() {\n    return this.runningTask !== undefined;\n  }\n  destroy() {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    this.containerEl = undefined;\n    this.views.forEach(destroyView);\n    this.activeView = undefined;\n    this.views = [];\n  }\n  getStack(stackId) {\n    return this.views.filter(v => v.stackId === stackId);\n  }\n  insertView(enteringView, direction) {\n    this.activeView = enteringView;\n    this.views = insertView(this.views, enteringView, direction);\n    return this.views.slice();\n  }\n  transition(enteringView, leavingView, direction, showGoBack, progressAnimation, animationBuilder) {\n    if (this.skipTransition) {\n      this.skipTransition = false;\n      return Promise.resolve(false);\n    }\n    if (leavingView === enteringView) {\n      return Promise.resolve(false);\n    }\n    const enteringEl = enteringView ? enteringView.element : undefined;\n    const leavingEl = leavingView ? leavingView.element : undefined;\n    const containerEl = this.containerEl;\n    if (enteringEl && enteringEl !== leavingEl) {\n      enteringEl.classList.add('ion-page');\n      enteringEl.classList.add('ion-page-invisible');\n      if (enteringEl.parentElement !== containerEl) {\n        containerEl.appendChild(enteringEl);\n      }\n      if (containerEl.commit) {\n        return containerEl.commit(enteringEl, leavingEl, {\n          duration: direction === undefined ? 0 : undefined,\n          direction,\n          showGoBack,\n          progressAnimation,\n          animationBuilder\n        });\n      }\n    }\n    return Promise.resolve(false);\n  }\n  async wait(task) {\n    if (this.runningTask !== undefined) {\n      await this.runningTask;\n      this.runningTask = undefined;\n    }\n    const promise = this.runningTask = task();\n    promise.finally(() => this.runningTask = undefined);\n    return promise;\n  }\n}\nconst cleanupAsync = (activeRoute, views, viewsSnapshot, location, zone) => {\n  if (typeof requestAnimationFrame === 'function') {\n    return new Promise(resolve => {\n      requestAnimationFrame(() => {\n        cleanup(activeRoute, views, viewsSnapshot, location, zone);\n        resolve();\n      });\n    });\n  }\n  return Promise.resolve();\n};\nconst cleanup = (activeRoute, views, viewsSnapshot, location, zone) => {\n  /**\n   * Re-enter the Angular zone when destroying page components. This will allow\n   * lifecycle events (`ngOnDestroy`) to be run inside the Angular zone.\n   */\n  zone.run(() => viewsSnapshot.filter(view => !views.includes(view)).forEach(destroyView));\n  views.forEach(view => {\n    /**\n     * In the event that a user navigated multiple\n     * times in rapid succession, we want to make sure\n     * we don't pre-emptively detach a view while\n     * it is in mid-transition.\n     *\n     * In this instance we also do not care about query\n     * params or fragments as it will be the same view regardless\n     */\n    const locationWithoutParams = location.path().split('?')[0];\n    const locationWithoutFragment = locationWithoutParams.split('#')[0];\n    if (view !== activeRoute && view.url !== locationWithoutFragment) {\n      const element = view.element;\n      element.setAttribute('aria-hidden', 'true');\n      element.classList.add('ion-page-hidden');\n      view.ref.changeDetectorRef.detach();\n    }\n  });\n};\n\n// TODO(FW-2827): types\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nclass IonRouterOutlet {\n  constructor(name, tabs, commonLocation, elementRef, router, zone, activatedRoute, parentOutlet) {\n    this.parentOutlet = parentOutlet;\n    this.activatedView = null;\n    // Maintain map of activated route proxies for each component instance\n    this.proxyMap = new WeakMap();\n    // Keep the latest activated route in a subject for the proxy routes to switch map to\n    this.currentActivatedRoute$ = new BehaviorSubject(null);\n    this.activated = null;\n    this._activatedRoute = null;\n    /**\n     * The name of the outlet\n     */\n    this.name = PRIMARY_OUTLET;\n    /** @internal */\n    this.stackWillChange = new EventEmitter();\n    /** @internal */\n    this.stackDidChange = new EventEmitter();\n    // eslint-disable-next-line @angular-eslint/no-output-rename\n    this.activateEvents = new EventEmitter();\n    // eslint-disable-next-line @angular-eslint/no-output-rename\n    this.deactivateEvents = new EventEmitter();\n    this.parentContexts = inject(ChildrenOutletContexts);\n    this.location = inject(ViewContainerRef);\n    this.environmentInjector = inject(EnvironmentInjector);\n    this.inputBinder = inject(INPUT_BINDER, {\n      optional: true\n    });\n    /** @nodoc */\n    this.supportsBindingToComponentInputs = true;\n    // Ionic providers\n    this.config = inject(Config);\n    this.navCtrl = inject(NavController);\n    this.nativeEl = elementRef.nativeElement;\n    this.name = name || PRIMARY_OUTLET;\n    this.tabsPrefix = tabs === 'true' ? getUrl(router, activatedRoute) : undefined;\n    this.stackCtrl = new StackController(this.tabsPrefix, this.nativeEl, router, this.navCtrl, zone, commonLocation);\n    this.parentContexts.onChildOutletCreated(this.name, this);\n  }\n  /** @internal */\n  get activatedComponentRef() {\n    return this.activated;\n  }\n  set animation(animation) {\n    this.nativeEl.animation = animation;\n  }\n  set animated(animated) {\n    this.nativeEl.animated = animated;\n  }\n  set swipeGesture(swipe) {\n    this._swipeGesture = swipe;\n    this.nativeEl.swipeHandler = swipe ? {\n      canStart: () => this.stackCtrl.canGoBack(1) && !this.stackCtrl.hasRunningTask(),\n      onStart: () => this.stackCtrl.startBackTransition(),\n      onEnd: shouldContinue => this.stackCtrl.endBackTransition(shouldContinue)\n    } : undefined;\n  }\n  ngOnDestroy() {\n    this.stackCtrl.destroy();\n    this.inputBinder?.unsubscribeFromRouteData(this);\n  }\n  getContext() {\n    return this.parentContexts.getContext(this.name);\n  }\n  ngOnInit() {\n    this.initializeOutletWithName();\n  }\n  // Note: Ionic deviates from the Angular Router implementation here\n  initializeOutletWithName() {\n    if (!this.activated) {\n      // If the outlet was not instantiated at the time the route got activated we need to populate\n      // the outlet when it is initialized (ie inside a NgIf)\n      const context = this.getContext();\n      if (context?.route) {\n        this.activateWith(context.route, context.injector);\n      }\n    }\n    new Promise(resolve => componentOnReady(this.nativeEl, resolve)).then(() => {\n      if (this._swipeGesture === undefined) {\n        this.swipeGesture = this.config.getBoolean('swipeBackEnabled', this.nativeEl.mode === 'ios');\n      }\n    });\n  }\n  get isActivated() {\n    return !!this.activated;\n  }\n  get component() {\n    if (!this.activated) {\n      throw new Error('Outlet is not activated');\n    }\n    return this.activated.instance;\n  }\n  get activatedRoute() {\n    if (!this.activated) {\n      throw new Error('Outlet is not activated');\n    }\n    return this._activatedRoute;\n  }\n  get activatedRouteData() {\n    if (this._activatedRoute) {\n      return this._activatedRoute.snapshot.data;\n    }\n    return {};\n  }\n  /**\n   * Called when the `RouteReuseStrategy` instructs to detach the subtree\n   */\n  detach() {\n    throw new Error('incompatible reuse strategy');\n  }\n  /**\n   * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  attach(_ref, _activatedRoute) {\n    throw new Error('incompatible reuse strategy');\n  }\n  deactivate() {\n    if (this.activated) {\n      if (this.activatedView) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const context = this.getContext();\n        this.activatedView.savedData = new Map(context.children['contexts']);\n        /**\n         * Angular v11.2.10 introduced a change\n         * where this route context is cleared out when\n         * a router-outlet is deactivated, However,\n         * we need this route information in order to\n         * return a user back to the correct tab when\n         * leaving and then going back to the tab context.\n         */\n        const primaryOutlet = this.activatedView.savedData.get('primary');\n        if (primaryOutlet && context.route) {\n          primaryOutlet.route = {\n            ...context.route\n          };\n        }\n        /**\n         * Ensure we are saving the NavigationExtras\n         * data otherwise it will be lost\n         */\n        this.activatedView.savedExtras = {};\n        if (context.route) {\n          const contextSnapshot = context.route.snapshot;\n          this.activatedView.savedExtras.queryParams = contextSnapshot.queryParams;\n          this.activatedView.savedExtras.fragment = contextSnapshot.fragment;\n        }\n      }\n      const c = this.component;\n      this.activatedView = null;\n      this.activated = null;\n      this._activatedRoute = null;\n      this.deactivateEvents.emit(c);\n    }\n  }\n  activateWith(activatedRoute, environmentInjector) {\n    if (this.isActivated) {\n      throw new Error('Cannot activate an already activated outlet');\n    }\n    this._activatedRoute = activatedRoute;\n    let cmpRef;\n    let enteringView = this.stackCtrl.getExistingView(activatedRoute);\n    if (enteringView) {\n      cmpRef = this.activated = enteringView.ref;\n      const saved = enteringView.savedData;\n      if (saved) {\n        // self-restore\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const context = this.getContext();\n        context.children['contexts'] = saved;\n      }\n      // Updated activated route proxy for this component\n      this.updateActivatedRouteProxy(cmpRef.instance, activatedRoute);\n    } else {\n      const snapshot = activatedRoute._futureSnapshot;\n      /**\n       * Angular 14 introduces a new `loadComponent` property to the route config.\n       * This function will assign a `component` property to the route snapshot.\n       * We check for the presence of this property to determine if the route is\n       * using standalone components.\n       */\n      const childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n      // We create an activated route proxy object that will maintain future updates for this component\n      // over its lifecycle in the stack.\n      const component$ = new BehaviorSubject(null);\n      const activatedRouteProxy = this.createActivatedRouteProxy(component$, activatedRoute);\n      const injector = new OutletInjector(activatedRouteProxy, childContexts, this.location.injector);\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const component = snapshot.routeConfig.component ?? snapshot.component;\n      cmpRef = this.activated = this.location.createComponent(component, {\n        index: this.location.length,\n        injector,\n        environmentInjector: environmentInjector ?? this.environmentInjector\n      });\n      // Once the component is created we can push it to our local subject supplied to the proxy\n      component$.next(cmpRef.instance);\n      // Calling `markForCheck` to make sure we will run the change detection when the\n      // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n      enteringView = this.stackCtrl.createView(this.activated, activatedRoute);\n      // Store references to the proxy by component\n      this.proxyMap.set(cmpRef.instance, activatedRouteProxy);\n      this.currentActivatedRoute$.next({\n        component: cmpRef.instance,\n        activatedRoute\n      });\n    }\n    this.inputBinder?.bindActivatedRouteToOutletComponent(this);\n    this.activatedView = enteringView;\n    /**\n     * The top outlet is set prior to the entering view's transition completing,\n     * so that when we have nested outlets (e.g. ion-tabs inside an ion-router-outlet),\n     * the tabs outlet will be assigned as the top outlet when a view inside tabs is\n     * activated.\n     *\n     * In this scenario, activeWith is called for both the tabs and the root router outlet.\n     * To avoid a race condition, we assign the top outlet synchronously.\n     */\n    this.navCtrl.setTopOutlet(this);\n    const leavingView = this.stackCtrl.getActiveView();\n    this.stackWillChange.emit({\n      enteringView,\n      tabSwitch: isTabSwitch(enteringView, leavingView)\n    });\n    this.stackCtrl.setActive(enteringView).then(data => {\n      this.activateEvents.emit(cmpRef.instance);\n      this.stackDidChange.emit(data);\n    });\n  }\n  /**\n   * Returns `true` if there are pages in the stack to go back.\n   */\n  canGoBack(deep = 1, stackId) {\n    return this.stackCtrl.canGoBack(deep, stackId);\n  }\n  /**\n   * Resolves to `true` if it the outlet was able to sucessfully pop the last N pages.\n   */\n  pop(deep = 1, stackId) {\n    return this.stackCtrl.pop(deep, stackId);\n  }\n  /**\n   * Returns the URL of the active page of each stack.\n   */\n  getLastUrl(stackId) {\n    const active = this.stackCtrl.getLastUrl(stackId);\n    return active ? active.url : undefined;\n  }\n  /**\n   * Returns the RouteView of the active page of each stack.\n   * @internal\n   */\n  getLastRouteView(stackId) {\n    return this.stackCtrl.getLastUrl(stackId);\n  }\n  /**\n   * Returns the root view in the tab stack.\n   * @internal\n   */\n  getRootView(stackId) {\n    return this.stackCtrl.getRootUrl(stackId);\n  }\n  /**\n   * Returns the active stack ID. In the context of ion-tabs, it means the active tab.\n   */\n  getActiveStackId() {\n    return this.stackCtrl.getActiveStackId();\n  }\n  /**\n   * Since the activated route can change over the life time of a component in an ion router outlet, we create\n   * a proxy so that we can update the values over time as a user navigates back to components already in the stack.\n   */\n  createActivatedRouteProxy(component$, activatedRoute) {\n    const proxy = new ActivatedRoute();\n    proxy._futureSnapshot = activatedRoute._futureSnapshot;\n    proxy._routerState = activatedRoute._routerState;\n    proxy.snapshot = activatedRoute.snapshot;\n    proxy.outlet = activatedRoute.outlet;\n    proxy.component = activatedRoute.component;\n    // Setup wrappers for the observables so consumers don't have to worry about switching to new observables as the state updates\n    proxy._paramMap = this.proxyObservable(component$, 'paramMap');\n    proxy._queryParamMap = this.proxyObservable(component$, 'queryParamMap');\n    proxy.url = this.proxyObservable(component$, 'url');\n    proxy.params = this.proxyObservable(component$, 'params');\n    proxy.queryParams = this.proxyObservable(component$, 'queryParams');\n    proxy.fragment = this.proxyObservable(component$, 'fragment');\n    proxy.data = this.proxyObservable(component$, 'data');\n    return proxy;\n  }\n  /**\n   * Create a wrapped observable that will switch to the latest activated route matched by the given component\n   */\n  proxyObservable(component$, path) {\n    return component$.pipe(\n    // First wait until the component instance is pushed\n    filter(component => !!component), switchMap(component => this.currentActivatedRoute$.pipe(filter(current => current !== null && current.component === component), switchMap(current => current && current.activatedRoute[path]), distinctUntilChanged())));\n  }\n  /**\n   * Updates the activated route proxy for the given component to the new incoming router state\n   */\n  updateActivatedRouteProxy(component, activatedRoute) {\n    const proxy = this.proxyMap.get(component);\n    if (!proxy) {\n      throw new Error(`Could not find activated route proxy for view`);\n    }\n    proxy._futureSnapshot = activatedRoute._futureSnapshot;\n    proxy._routerState = activatedRoute._routerState;\n    proxy.snapshot = activatedRoute.snapshot;\n    proxy.outlet = activatedRoute.outlet;\n    proxy.component = activatedRoute.component;\n    this.currentActivatedRoute$.next({\n      component,\n      activatedRoute\n    });\n  }\n}\n/** @nocollapse */\nIonRouterOutlet.\u0275fac = function IonRouterOutlet_Factory(t) {\n  return new (t || IonRouterOutlet)(i0.\u0275\u0275injectAttribute('name'), i0.\u0275\u0275injectAttribute('tabs'), i0.\u0275\u0275directiveInject(i1.Location), i0.\u0275\u0275directiveInject(i0.ElementRef), i0.\u0275\u0275directiveInject(i3.Router), i0.\u0275\u0275directiveInject(i0.NgZone), i0.\u0275\u0275directiveInject(i3.ActivatedRoute), i0.\u0275\u0275directiveInject(IonRouterOutlet, 12));\n};\n/** @nocollapse */\nIonRouterOutlet.\u0275dir = /* @__PURE__ */i0.\u0275\u0275defineDirective({\n  type: IonRouterOutlet,\n  selectors: [[\"ion-router-outlet\"]],\n  inputs: {\n    animated: \"animated\",\n    animation: \"animation\",\n    mode: \"mode\",\n    swipeGesture: \"swipeGesture\",\n    name: \"name\"\n  },\n  outputs: {\n    stackWillChange: \"stackWillChange\",\n    stackDidChange: \"stackDidChange\",\n    activateEvents: \"activate\",\n    deactivateEvents: \"deactivate\"\n  },\n  exportAs: [\"outlet\"]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.\u0275setClassMetadata(IonRouterOutlet, [{\n    type: Directive,\n    args: [{\n      selector: 'ion-router-outlet',\n      exportAs: 'outlet',\n      // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n      inputs: ['animated', 'animation', 'mode', 'swipeGesture']\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Attribute,\n        args: ['name']\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Attribute,\n        args: ['tabs']\n      }]\n    }, {\n      type: i1.Location\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i3.Router\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i3.ActivatedRoute\n    }, {\n      type: IonRouterOutlet,\n      decorators: [{\n        type: SkipSelf\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    name: [{\n      type: Input\n    }],\n    stackWillChange: [{\n      type: Output\n    }],\n    stackDidChange: [{\n      type: Output\n    }],\n    activateEvents: [{\n      type: Output,\n      args: ['activate']\n    }],\n    deactivateEvents: [{\n      type: Output,\n      args: ['deactivate']\n    }]\n  });\n})();\nclass OutletInjector {\n  constructor(route, childContexts, parent) {\n    this.route = route;\n    this.childContexts = childContexts;\n    this.parent = parent;\n  }\n  get(token, notFoundValue) {\n    if (token === ActivatedRoute) {\n      return this.route;\n    }\n    if (token === ChildrenOutletContexts) {\n      return this.childContexts;\n    }\n    return this.parent.get(token, notFoundValue);\n  }\n}\n// TODO: FW-4785 - Remove this once Angular 15 support is dropped\nconst INPUT_BINDER = new InjectionToken('');\n/**\n * Injectable used as a tree-shakable provider for opting in to binding router data to component\n * inputs.\n *\n * The RouterOutlet registers itself with this service when an `ActivatedRoute` is attached or\n * activated. When this happens, the service subscribes to the `ActivatedRoute` observables (params,\n * queryParams, data) and sets the inputs of the component using `ComponentRef.setInput`.\n * Importantly, when an input does not have an item in the route data with a matching key, this\n * input is set to `undefined`. If it were not done this way, the previous information would be\n * retained if the data got removed from the route (i.e. if a query parameter is removed).\n *\n * The `RouterOutlet` should unregister itself when destroyed via `unsubscribeFromRouteData` so that\n * the subscriptions are cleaned up.\n */\nclass RoutedComponentInputBinder {\n  constructor() {\n    this.outletDataSubscriptions = new Map();\n  }\n  bindActivatedRouteToOutletComponent(outlet) {\n    this.unsubscribeFromRouteData(outlet);\n    this.subscribeToRouteData(outlet);\n  }\n  unsubscribeFromRouteData(outlet) {\n    this.outletDataSubscriptions.get(outlet)?.unsubscribe();\n    this.outletDataSubscriptions.delete(outlet);\n  }\n  subscribeToRouteData(outlet) {\n    const {\n      activatedRoute\n    } = outlet;\n    const dataSubscription = combineLatest([activatedRoute.queryParams, activatedRoute.params, activatedRoute.data]).pipe(switchMap(([queryParams, params, data], index) => {\n      data = {\n        ...queryParams,\n        ...params,\n        ...data\n      };\n      // Get the first result from the data subscription synchronously so it's available to\n      // the component as soon as possible (and doesn't require a second change detection).\n      if (index === 0) {\n        return of(data);\n      }\n      // Promise.resolve is used to avoid synchronously writing the wrong data when\n      // two of the Observables in the `combineLatest` stream emit one after\n      // another.\n      return Promise.resolve(data);\n    })).subscribe(data => {\n      // Outlet may have been deactivated or changed names to be associated with a different\n      // route\n      if (!outlet.isActivated || !outlet.activatedComponentRef || outlet.activatedRoute !== activatedRoute || activatedRoute.component === null) {\n        this.unsubscribeFromRouteData(outlet);\n        return;\n      }\n      const mirror = reflectComponentType(activatedRoute.component);\n      if (!mirror) {\n        this.unsubscribeFromRouteData(outlet);\n        return;\n      }\n      for (const {\n        templateName\n      } of mirror.inputs) {\n        outlet.activatedComponentRef.setInput(templateName, data[templateName]);\n      }\n    });\n    this.outletDataSubscriptions.set(outlet, dataSubscription);\n  }\n}\n/** @nocollapse */\nRoutedComponentInputBinder.\u0275fac = function RoutedComponentInputBinder_Factory(t) {\n  return new (t || RoutedComponentInputBinder)();\n};\n/** @nocollapse */\nRoutedComponentInputBinder.\u0275prov = /* @__PURE__ */i0.\u0275\u0275defineInjectable({\n  token: RoutedComponentInputBinder,\n  factory: RoutedComponentInputBinder.\u0275fac\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.\u0275setClassMetadata(RoutedComponentInputBinder, [{\n    type: Injectable\n  }], null, null);\n})();\nconst provideComponentInputBinding = () => {\n  return {\n    provide: INPUT_BINDER,\n    useFactory: componentInputBindingFactory,\n    deps: [Router]\n  };\n};\nfunction componentInputBindingFactory(router) {\n  /**\n   * We cast the router to any here, since the componentInputBindingEnabled\n   * property is not available until Angular v16.\n   */\n  if (router?.componentInputBindingEnabled) {\n    return new RoutedComponentInputBinder();\n  }\n  return null;\n}\nconst BACK_BUTTON_INPUTS = ['color', 'defaultHref', 'disabled', 'icon', 'mode', 'routerAnimation', 'text', 'type'];\nlet IonBackButton = class IonBackButton {\n  constructor(routerOutlet, navCtrl, config, r, z, c) {\n    this.routerOutlet = routerOutlet;\n    this.navCtrl = navCtrl;\n    this.config = config;\n    this.r = r;\n    this.z = z;\n    c.detach();\n    this.el = this.r.nativeElement;\n  }\n  /**\n   * @internal\n   */\n  onClick(ev) {\n    const defaultHref = this.defaultHref || this.config.get('backButtonDefaultHref');\n    if (this.routerOutlet?.canGoBack()) {\n      this.navCtrl.setDirection('back', undefined, undefined, this.routerAnimation);\n      this.routerOutlet.pop();\n      ev.preventDefault();\n    } else if (defaultHref != null) {\n      this.navCtrl.navigateBack(defaultHref, {\n        animation: this.routerAnimation\n      });\n      ev.preventDefault();\n    }\n  }\n};\n/** @nocollapse */\nIonBackButton.\u0275fac = function IonBackButton_Factory(t) {\n  return new (t || IonBackButton)(i0.\u0275\u0275directiveInject(IonRouterOutlet, 8), i0.\u0275\u0275directiveInject(NavController), i0.\u0275\u0275directiveInject(Config), i0.\u0275\u0275directiveInject(i0.ElementRef), i0.\u0275\u0275directiveInject(i0.NgZone), i0.\u0275\u0275directiveInject(i0.ChangeDetectorRef));\n};\n/** @nocollapse */\nIonBackButton.\u0275dir = /* @__PURE__ */i0.\u0275\u0275defineDirective({\n  type: IonBackButton,\n  hostBindings: function IonBackButton_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.\u0275\u0275listener(\"click\", function IonBackButton_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n  },\n  inputs: {\n    color: \"color\",\n    defaultHref: \"defaultHref\",\n    disabled: \"disabled\",\n    icon: \"icon\",\n    mode: \"mode\",\n    routerAnimation: \"routerAnimation\",\n    text: \"text\",\n    type: \"type\"\n  }\n});\nIonBackButton = __decorate([ProxyCmp({\n  inputs: BACK_BUTTON_INPUTS\n})], IonBackButton);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.\u0275setClassMetadata(IonBackButton, [{\n    type: Directive,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n      inputs: BACK_BUTTON_INPUTS\n    }]\n  }], function () {\n    return [{\n      type: IonRouterOutlet,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: NavController\n    }, {\n      type: Config\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    defaultHref: [{\n      type: Input\n    }],\n    routerAnimation: [{\n      type: Input\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }]\n  });\n})();\n\n/**\n * Adds support for Ionic routing directions and animations to the base Angular router link directive.\n *\n * When the router link is clicked, the directive will assign the direction and\n * animation so that the routing integration will transition correctly.\n */\nclass RouterLinkDelegateDirective {\n  constructor(locationStrategy, navCtrl, elementRef, router, routerLink) {\n    this.locationStrategy = locationStrategy;\n    this.navCtrl = navCtrl;\n    this.elementRef = elementRef;\n    this.router = router;\n    this.routerLink = routerLink;\n    this.routerDirection = 'forward';\n  }\n  ngOnInit() {\n    this.updateTargetUrlAndHref();\n  }\n  ngOnChanges() {\n    this.updateTargetUrlAndHref();\n  }\n  updateTargetUrlAndHref() {\n    if (this.routerLink?.urlTree) {\n      const href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.routerLink.urlTree));\n      this.elementRef.nativeElement.href = href;\n    }\n  }\n  /**\n   * @internal\n   */\n  onClick(ev) {\n    this.navCtrl.setDirection(this.routerDirection, undefined, undefined, this.routerAnimation);\n    /**\n     * This prevents the browser from\n     * performing a page reload when pressing\n     * an Ionic component with routerLink.\n     * The page reload interferes with routing\n     * and causes ion-back-button to disappear\n     * since the local history is wiped on reload.\n     */\n    ev.preventDefault();\n  }\n}\n/** @nocollapse */\nRouterLinkDelegateDirective.\u0275fac = function RouterLinkDelegateDirective_Factory(t) {\n  return new (t || RouterLinkDelegateDirective)(i0.\u0275\u0275directiveInject(i1.LocationStrategy), i0.\u0275\u0275directiveInject(NavController), i0.\u0275\u0275directiveInject(i0.ElementRef), i0.\u0275\u0275directiveInject(i3.Router), i0.\u0275\u0275directiveInject(i3.RouterLink, 8));\n};\n/** @nocollapse */\nRouterLinkDelegateDirective.\u0275dir = /* @__PURE__ */i0.\u0275\u0275defineDirective({\n  type: RouterLinkDelegateDirective,\n  selectors: [[\"\", \"routerLink\", \"\", 5, \"a\", 5, \"area\"]],\n  hostBindings: function RouterLinkDelegateDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.\u0275\u0275listener(\"click\", function RouterLinkDelegateDirective_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n  },\n  inputs: {\n    routerDirection: \"routerDirection\",\n    routerAnimation: \"routerAnimation\"\n  },\n  features: [i0.\u0275\u0275NgOnChangesFeature]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.\u0275setClassMetadata(RouterLinkDelegateDirective, [{\n    type: Directive,\n    args: [{\n      selector: ':not(a):not(area)[routerLink]'\n    }]\n  }], function () {\n    return [{\n      type: i1.LocationStrategy\n    }, {\n      type: NavController\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i3.Router\n    }, {\n      type: i3.RouterLink,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    routerDirection: [{\n      type: Input\n    }],\n    routerAnimation: [{\n      type: Input\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }]\n  });\n})();\nclass RouterLinkWithHrefDelegateDirective {\n  constructor(locationStrategy, navCtrl, elementRef, router, routerLink) {\n    this.locationStrategy = locationStrategy;\n    this.navCtrl = navCtrl;\n    this.elementRef = elementRef;\n    this.router = router;\n    this.routerLink = routerLink;\n    this.routerDirection = 'forward';\n  }\n  ngOnInit() {\n    this.updateTargetUrlAndHref();\n  }\n  ngOnChanges() {\n    this.updateTargetUrlAndHref();\n  }\n  updateTargetUrlAndHref() {\n    if (this.routerLink?.urlTree) {\n      const href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.routerLink.urlTree));\n      this.elementRef.nativeElement.href = href;\n    }\n  }\n  /**\n   * @internal\n   */\n  onClick() {\n    this.navCtrl.setDirection(this.routerDirection, undefined, undefined, this.routerAnimation);\n  }\n}\n/** @nocollapse */\nRouterLinkWithHrefDelegateDirective.\u0275fac = function RouterLinkWithHrefDelegateDirective_Factory(t) {\n  return new (t || RouterLinkWithHrefDelegateDirective)(i0.\u0275\u0275directiveInject(i1.LocationStrategy), i0.\u0275\u0275directiveInject(NavController), i0.\u0275\u0275directiveInject(i0.ElementRef), i0.\u0275\u0275directiveInject(i3.Router), i0.\u0275\u0275directiveInject(i3.RouterLink, 8));\n};\n/** @nocollapse */\nRouterLinkWithHrefDelegateDirective.\u0275dir = /* @__PURE__ */i0.\u0275\u0275defineDirective({\n  type: RouterLinkWithHrefDelegateDirective,\n  selectors: [[\"a\", \"routerLink\", \"\"], [\"area\", \"routerLink\", \"\"]],\n  hostBindings: function RouterLinkWithHrefDelegateDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.\u0275\u0275listener(\"click\", function RouterLinkWithHrefDelegateDirective_click_HostBindingHandler() {\n        return ctx.onClick();\n      });\n    }\n  },\n  inputs: {\n    routerDirection: \"routerDirection\",\n    routerAnimation: \"routerAnimation\"\n  },\n  features: [i0.\u0275\u0275NgOnChangesFeature]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.\u0275setClassMetadata(RouterLinkWithHrefDelegateDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'a[routerLink],area[routerLink]'\n    }]\n  }], function () {\n    return [{\n      type: i1.LocationStrategy\n    }, {\n      type: NavController\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i3.Router\n    }, {\n      type: i3.RouterLink,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    routerDirection: [{\n      type: Input\n    }],\n    routerAnimation: [{\n      type: Input\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click']\n    }]\n  });\n})();\nconst NAV_INPUTS = ['animated', 'animation', 'root', 'rootParams', 'swipeGesture'];\nconst NAV_METHODS = ['push', 'insert', 'insertPages', 'pop', 'popTo', 'popToRoot', 'removeIndex', 'setRoot', 'setPages', 'getActive', 'getByIndex', 'canGoBack', 'getPrevious'];\nlet IonNav = class IonNav {\n  constructor(ref, environmentInjector, injector, angularDelegate, z, c) {\n    this.z = z;\n    c.detach();\n    this.el = ref.nativeElement;\n    ref.nativeElement.delegate = angularDelegate.create(environmentInjector, injector);\n    proxyOutputs(this, this.el, ['ionNavDidChange', 'ionNavWillChange']);\n  }\n};\n/** @nocollapse */\nIonNav.\u0275fac = function IonNav_Factory(t) {\n  return new (t || IonNav)(i0.\u0275\u0275directiveInject(i0.ElementRef), i0.\u0275\u0275directiveInject(i0.EnvironmentInjector), i0.\u0275\u0275directiveInject(i0.Injector), i0.\u0275\u0275directiveInject(AngularDelegate), i0.\u0275\u0275directiveInject(i0.NgZone), i0.\u0275\u0275directiveInject(i0.ChangeDetectorRef));\n};\n/** @nocollapse */\nIonNav.\u0275dir = /* @__PURE__ */i0.\u0275\u0275defineDirective({\n  type: IonNav,\n  inputs: {\n    animated: \"animated\",\n    animation: \"animation\",\n    root: \"root\",\n    rootParams: \"rootParams\",\n    swipeGesture: \"swipeGesture\"\n  }\n});\nIonNav = __decorate([ProxyCmp({\n  inputs: NAV_INPUTS,\n  methods: NAV_METHODS\n})], IonNav);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.\u0275setClassMetadata(IonNav, [{\n    type: Directive,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n      inputs: NAV_INPUTS\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.EnvironmentInjector\n    }, {\n      type: i0.Injector\n    }, {\n      type: AngularDelegate\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, null);\n})();\n\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nclass IonTabs {\n  constructor(navCtrl) {\n    this.navCtrl = navCtrl;\n    /**\n     * Emitted before the tab view is changed.\n     */\n    this.ionTabsWillChange = new EventEmitter();\n    /**\n     * Emitted after the tab view is changed.\n     */\n    this.ionTabsDidChange = new EventEmitter();\n    this.tabBarSlot = 'bottom';\n  }\n  ngAfterContentInit() {\n    this.detectSlotChanges();\n  }\n  ngAfterContentChecked() {\n    this.detectSlotChanges();\n  }\n  /**\n   * @internal\n   */\n  onStackWillChange({\n    enteringView,\n    tabSwitch\n  }) {\n    const stackId = enteringView.stackId;\n    if (tabSwitch && stackId !== undefined) {\n      this.ionTabsWillChange.emit({\n        tab: stackId\n      });\n    }\n  }\n  /**\n   * @internal\n   */\n  onStackDidChange({\n    enteringView,\n    tabSwitch\n  }) {\n    const stackId = enteringView.stackId;\n    if (tabSwitch && stackId !== undefined) {\n      if (this.tabBar) {\n        this.tabBar.selectedTab = stackId;\n      }\n      this.ionTabsDidChange.emit({\n        tab: stackId\n      });\n    }\n  }\n  /**\n   * When a tab button is clicked, there are several scenarios:\n   * 1. If the selected tab is currently active (the tab button has been clicked\n   *    again), then it should go to the root view for that tab.\n   *\n   *   a. Get the saved root view from the router outlet. If the saved root view\n   *      matches the tabRootUrl, set the route view to this view including the\n   *      navigation extras.\n   *   b. If the saved root view from the router outlet does\n   *      not match, navigate to the tabRootUrl. No navigation extras are\n   *      included.\n   *\n   * 2. If the current tab tab is not currently selected, get the last route\n   *    view from the router outlet.\n   *\n   *   a. If the last route view exists, navigate to that view including any\n   *      navigation extras\n   *   b. If the last route view doesn't exist, then navigate\n   *      to the default tabRootUrl\n   */\n  select(tabOrEvent) {\n    const isTabString = typeof tabOrEvent === 'string';\n    const tab = isTabString ? tabOrEvent : tabOrEvent.detail.tab;\n    const alreadySelected = this.outlet.getActiveStackId() === tab;\n    const tabRootUrl = `${this.outlet.tabsPrefix}/${tab}`;\n    /**\n     * If this is a nested tab, prevent the event\n     * from bubbling otherwise the outer tabs\n     * will respond to this event too, causing\n     * the app to get directed to the wrong place.\n     */\n    if (!isTabString) {\n      tabOrEvent.stopPropagation();\n    }\n    if (alreadySelected) {\n      const activeStackId = this.outlet.getActiveStackId();\n      const activeView = this.outlet.getLastRouteView(activeStackId);\n      // If on root tab, do not navigate to root tab again\n      if (activeView?.url === tabRootUrl) {\n        return;\n      }\n      const rootView = this.outlet.getRootView(tab);\n      const navigationExtras = rootView && tabRootUrl === rootView.url && rootView.savedExtras;\n      return this.navCtrl.navigateRoot(tabRootUrl, {\n        ...navigationExtras,\n        animated: true,\n        animationDirection: 'back'\n      });\n    } else {\n      const lastRoute = this.outlet.getLastRouteView(tab);\n      /**\n       * If there is a lastRoute, goto that, otherwise goto the fallback url of the\n       * selected tab\n       */\n      const url = lastRoute?.url || tabRootUrl;\n      const navigationExtras = lastRoute?.savedExtras;\n      return this.navCtrl.navigateRoot(url, {\n        ...navigationExtras,\n        animated: true,\n        animationDirection: 'back'\n      });\n    }\n  }\n  getSelected() {\n    return this.outlet.getActiveStackId();\n  }\n  /**\n   * Detects changes to the slot attribute of the tab bar.\n   *\n   * If the slot attribute has changed, then the tab bar\n   * should be relocated to the new slot position.\n   */\n  detectSlotChanges() {\n    this.tabBars.forEach(tabBar => {\n      // el is a protected attribute from the generated component wrapper\n      const currentSlot = tabBar.el.getAttribute('slot');\n      if (currentSlot !== this.tabBarSlot) {\n        this.tabBarSlot = currentSlot;\n        this.relocateTabBar();\n      }\n    });\n  }\n  /**\n   * Relocates the tab bar to the new slot position.\n   */\n  relocateTabBar() {\n    /**\n     * `el` is a protected attribute from the generated component wrapper.\n     * To avoid having to manually create the wrapper for tab bar, we\n     * cast the tab bar to any and access the protected attribute.\n     */\n    const tabBar = this.tabBar.el;\n    if (this.tabBarSlot === 'top') {\n      /**\n       * A tab bar with a slot of \"top\" should be inserted\n       * at the top of the container.\n       */\n      this.tabsInner.nativeElement.before(tabBar);\n    } else {\n      /**\n       * A tab bar with a slot of \"bottom\" or without a slot\n       * should be inserted at the end of the container.\n       */\n      this.tabsInner.nativeElement.after(tabBar);\n    }\n  }\n}\n/** @nocollapse */\nIonTabs.\u0275fac = function IonTabs_Factory(t) {\n  return new (t || IonTabs)(i0.\u0275\u0275directiveInject(NavController));\n};\n/** @nocollapse */\nIonTabs.\u0275dir = /* @__PURE__ */i0.\u0275\u0275defineDirective({\n  type: IonTabs,\n  selectors: [[\"ion-tabs\"]],\n  viewQuery: function IonTabs_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.\u0275\u0275viewQuery(_c0, 7, ElementRef);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.\u0275\u0275queryRefresh(_t = i0.\u0275\u0275loadQuery()) && (ctx.tabsInner = _t.first);\n    }\n  },\n  hostBindings: function IonTabs_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.\u0275\u0275listener(\"ionTabButtonClick\", function IonTabs_ionTabButtonClick_HostBindingHandler($event) {\n        return ctx.select($event);\n      });\n    }\n  },\n  outputs: {\n    ionTabsWillChange: \"ionTabsWillChange\",\n    ionTabsDidChange: \"ionTabsDidChange\"\n  }\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.\u0275setClassMetadata(IonTabs, [{\n    type: Directive,\n    args: [{\n      selector: 'ion-tabs'\n    }]\n  }], function () {\n    return [{\n      type: NavController\n    }];\n  }, {\n    tabsInner: [{\n      type: ViewChild,\n      args: ['tabsInner', {\n        read: ElementRef,\n        static: true\n      }]\n    }],\n    ionTabsWillChange: [{\n      type: Output\n    }],\n    ionTabsDidChange: [{\n      type: Output\n    }],\n    select: [{\n      type: HostListener,\n      args: ['ionTabButtonClick', ['$event']]\n    }]\n  });\n})();\nconst raf = h => {\n  if (typeof __zone_symbol__requestAnimationFrame === 'function') {\n    return __zone_symbol__requestAnimationFrame(h);\n  }\n  if (typeof requestAnimationFrame === 'function') {\n    return requestAnimationFrame(h);\n  }\n  return setTimeout(h);\n};\n\n// TODO(FW-2827): types\nclass ValueAccessor {\n  constructor(injector, elementRef) {\n    this.injector = injector;\n    this.elementRef = elementRef;\n    this.onChange = () => {\n      /**/\n    };\n    this.onTouched = () => {\n      /**/\n    };\n  }\n  writeValue(value) {\n    this.elementRef.nativeElement.value = this.lastValue = value;\n    setIonicClasses(this.elementRef);\n  }\n  /**\n   * Notifies the ControlValueAccessor of a change in the value of the control.\n   *\n   * This is called by each of the ValueAccessor directives when we want to update\n   * the status and validity of the form control. For example with text components this\n   * is called when the ionInput event is fired. For select components this is called\n   * when the ionChange event is fired.\n   *\n   * This also updates the Ionic form status classes on the element.\n   *\n   * @param el The component element.\n   * @param value The new value of the control.\n   */\n  handleValueChange(el, value) {\n    if (el === this.elementRef.nativeElement) {\n      if (value !== this.lastValue) {\n        this.lastValue = value;\n        this.onChange(value);\n      }\n      setIonicClasses(this.elementRef);\n    }\n  }\n  _handleBlurEvent(el) {\n    if (el === this.elementRef.nativeElement) {\n      this.onTouched();\n      setIonicClasses(this.elementRef);\n    }\n  }\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  setDisabledState(isDisabled) {\n    this.elementRef.nativeElement.disabled = isDisabled;\n  }\n  ngOnDestroy() {\n    if (this.statusChanges) {\n      this.statusChanges.unsubscribe();\n    }\n  }\n  ngAfterViewInit() {\n    let ngControl;\n    try {\n      ngControl = this.injector.get(NgControl);\n    } catch {\n      /* No FormControl or ngModel binding */\n    }\n    if (!ngControl) {\n      return;\n    }\n    // Listen for changes in validity, disabled, or pending states\n    if (ngControl.statusChanges) {\n      this.statusChanges = ngControl.statusChanges.subscribe(() => setIonicClasses(this.elementRef));\n    }\n    /**\n     * TODO FW-2787: Remove this in favor of https://github.com/angular/angular/issues/10887\n     * whenever it is implemented.\n     */\n    const formControl = ngControl.control;\n    if (formControl) {\n      const methodsToPatch = ['markAsTouched', 'markAllAsTouched', 'markAsUntouched', 'markAsDirty', 'markAsPristine'];\n      methodsToPatch.forEach(method => {\n        if (typeof formControl[method] !== 'undefined') {\n          const oldFn = formControl[method].bind(formControl);\n          formControl[method] = (...params) => {\n            oldFn(...params);\n            setIonicClasses(this.elementRef);\n          };\n        }\n      });\n    }\n  }\n}\n/** @nocollapse */\nValueAccessor.\u0275fac = function ValueAccessor_Factory(t) {\n  return new (t || ValueAccessor)(i0.\u0275\u0275directiveInject(i0.Injector), i0.\u0275\u0275directiveInject(i0.ElementRef));\n};\n/** @nocollapse */\nValueAccessor.\u0275dir = /* @__PURE__ */i0.\u0275\u0275defineDirective({\n  type: ValueAccessor,\n  hostBindings: function ValueAccessor_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.\u0275\u0275listener(\"ionBlur\", function ValueAccessor_ionBlur_HostBindingHandler($event) {\n        return ctx._handleBlurEvent($event.target);\n      });\n    }\n  }\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.\u0275setClassMetadata(ValueAccessor, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.Injector\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    _handleBlurEvent: [{\n      type: HostListener,\n      args: ['ionBlur', ['$event.target']]\n    }]\n  });\n})();\nconst setIonicClasses = element => {\n  raf(() => {\n    const input = element.nativeElement;\n    const hasValue = input.value != null && input.value.toString().length > 0;\n    const classes = getClasses(input);\n    setClasses(input, classes);\n    const item = input.closest('ion-item');\n    if (item) {\n      if (hasValue) {\n        setClasses(item, [...classes, 'item-has-value']);\n      } else {\n        setClasses(item, classes);\n      }\n    }\n  });\n};\nconst getClasses = element => {\n  const classList = element.classList;\n  const classes = [];\n  for (let i = 0; i < classList.length; i++) {\n    const item = classList.item(i);\n    if (item !== null && startsWith(item, 'ng-')) {\n      classes.push(`ion-${item.substring(3)}`);\n    }\n  }\n  return classes;\n};\nconst setClasses = (element, classes) => {\n  const classList = element.classList;\n  classList.remove('ion-valid', 'ion-invalid', 'ion-touched', 'ion-untouched', 'ion-dirty', 'ion-pristine');\n  classList.add(...classes);\n};\nconst startsWith = (input, search) => {\n  return input.substring(0, search.length) === search;\n};\n\n/**\n * Provides a way to customize when activated routes get reused.\n */\nclass IonicRouteStrategy {\n  /**\n   * Whether the given route should detach for later reuse.\n   */\n  shouldDetach(_route) {\n    return false;\n  }\n  /**\n   * Returns `false`, meaning the route (and its subtree) is never reattached\n   */\n  shouldAttach(_route) {\n    return false;\n  }\n  /**\n   * A no-op; the route is never stored since this strategy never detaches routes for later re-use.\n   */\n  store(_route, _detachedTree) {\n    return;\n  }\n  /**\n   * Returns `null` because this strategy does not store routes for later re-use.\n   */\n  retrieve(_route) {\n    return null;\n  }\n  /**\n   * Determines if a route should be reused.\n   * This strategy returns `true` when the future route config and\n   * current route config are identical and all route parameters are identical.\n   */\n  shouldReuseRoute(future, curr) {\n    if (future.routeConfig !== curr.routeConfig) {\n      return false;\n    }\n    // checking router params\n    const futureParams = future.params;\n    const currentParams = curr.params;\n    const keysA = Object.keys(futureParams);\n    const keysB = Object.keys(currentParams);\n    if (keysA.length !== keysB.length) {\n      return false;\n    }\n    // Test for A's keys different from B.\n    for (const key of keysA) {\n      if (currentParams[key] !== futureParams[key]) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\n// TODO(FW-2827): types\nclass OverlayBaseController {\n  constructor(ctrl) {\n    this.ctrl = ctrl;\n  }\n  /**\n   * Creates a new overlay\n   */\n  create(opts) {\n    return this.ctrl.create(opts || {});\n  }\n  /**\n   * When `id` is not provided, it dismisses the top overlay.\n   */\n  dismiss(data, role, id) {\n    return this.ctrl.dismiss(data, role, id);\n  }\n  /**\n   * Returns the top overlay.\n   */\n  getTop() {\n    return this.ctrl.getTop();\n  }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngularDelegate, Config, ConfigToken, DomController, IonBackButton, IonModal, IonNav, IonPopover, IonRouterOutlet, IonTabs, IonicRouteStrategy, MenuController, NavController, NavParams, OverlayBaseController, Platform, ProxyCmp, RouterLinkDelegateDirective, RouterLinkWithHrefDelegateDirective, ValueAccessor, bindLifecycleEvents, provideComponentInputBinding, raf, setIonicClasses };\n", "/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nexport { getAssetPath, setAssetPath, setNonce, setPlatformOptions } from '@stencil/core/internal/client';\nexport { c as createAnimation } from './animation.js';\nexport { a as LIFECYCLE_DID_ENTER, c as LIFECYCLE_DID_LEAVE, L as LIFECYCLE_WILL_ENTER, b as LIFECYCLE_WILL_LEAVE, d as LIFECYCLE_WILL_UNLOAD, g as getIonPageElement } from './index2.js';\nexport { iosTransitionAnimation } from './ios.transition.js';\nexport { mdTransitionAnimation } from './md.transition.js';\nexport { g as getTimeGivenProgression } from './cubic-bezier.js';\nexport { createGesture } from './index3.js';\nexport { g as getPlatforms, i as initialize, a as isPlatform } from './ionic-global.js';\nexport { c as componentOnReady } from './helpers.js';\nexport { I as IonicSafeString, g as getMode, s as setupConfig } from './config.js';\nexport { o as openURL } from './theme.js';\nexport { m as menuController } from './index4.js';\nexport { b as actionSheetController, a as alertController, l as loadingController, m as modalController, p as pickerController, c as popoverController, t as toastController } from './overlays.js';\n\nconst IonicSlides = (opts) => {\n    const { swiper, extendParams } = opts;\n    const slidesParams = {\n        effect: undefined,\n        direction: 'horizontal',\n        initialSlide: 0,\n        loop: false,\n        parallax: false,\n        slidesPerView: 1,\n        spaceBetween: 0,\n        speed: 300,\n        slidesPerColumn: 1,\n        slidesPerColumnFill: 'column',\n        slidesPerGroup: 1,\n        centeredSlides: false,\n        slidesOffsetBefore: 0,\n        slidesOffsetAfter: 0,\n        touchEventsTarget: 'container',\n        freeMode: false,\n        freeModeMomentum: true,\n        freeModeMomentumRatio: 1,\n        freeModeMomentumBounce: true,\n        freeModeMomentumBounceRatio: 1,\n        freeModeMomentumVelocityRatio: 1,\n        freeModeSticky: false,\n        freeModeMinimumVelocity: 0.02,\n        autoHeight: false,\n        setWrapperSize: false,\n        zoom: {\n            maxRatio: 3,\n            minRatio: 1,\n            toggle: false,\n        },\n        touchRatio: 1,\n        touchAngle: 45,\n        simulateTouch: true,\n        touchStartPreventDefault: false,\n        shortSwipes: true,\n        longSwipes: true,\n        longSwipesRatio: 0.5,\n        longSwipesMs: 300,\n        followFinger: true,\n        threshold: 0,\n        touchMoveStopPropagation: true,\n        touchReleaseOnEdges: false,\n        iOSEdgeSwipeDetection: false,\n        iOSEdgeSwipeThreshold: 20,\n        resistance: true,\n        resistanceRatio: 0.85,\n        watchSlidesProgress: false,\n        watchSlidesVisibility: false,\n        preventClicks: true,\n        preventClicksPropagation: true,\n        slideToClickedSlide: false,\n        loopAdditionalSlides: 0,\n        noSwiping: true,\n        runCallbacksOnInit: true,\n        coverflowEffect: {\n            rotate: 50,\n            stretch: 0,\n            depth: 100,\n            modifier: 1,\n            slideShadows: true,\n        },\n        flipEffect: {\n            slideShadows: true,\n            limitRotation: true,\n        },\n        cubeEffect: {\n            slideShadows: true,\n            shadow: true,\n            shadowOffset: 20,\n            shadowScale: 0.94,\n        },\n        fadeEffect: {\n            crossFade: false,\n        },\n        a11y: {\n            prevSlideMessage: 'Previous slide',\n            nextSlideMessage: 'Next slide',\n            firstSlideMessage: 'This is the first slide',\n            lastSlideMessage: 'This is the last slide',\n        },\n    };\n    if (swiper.pagination) {\n        slidesParams.pagination = {\n            type: 'bullets',\n            clickable: false,\n            hideOnClick: false,\n        };\n    }\n    if (swiper.scrollbar) {\n        slidesParams.scrollbar = {\n            hide: true,\n        };\n    }\n    extendParams(slidesParams);\n};\n\nexport { IonicSlides };\n", "/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { setPlatformHelpers, setMode, getMode } from '@stencil/core/internal/client';\n\n// TODO(FW-2832): types\nclass Config {\n    constructor() {\n        this.m = new Map();\n    }\n    reset(configObj) {\n        this.m = new Map(Object.entries(configObj));\n    }\n    get(key, fallback) {\n        const value = this.m.get(key);\n        return value !== undefined ? value : fallback;\n    }\n    getBoolean(key, fallback = false) {\n        const val = this.m.get(key);\n        if (val === undefined) {\n            return fallback;\n        }\n        if (typeof val === 'string') {\n            return val === 'true';\n        }\n        return !!val;\n    }\n    getNumber(key, fallback) {\n        const val = parseFloat(this.m.get(key));\n        return isNaN(val) ? (fallback !== undefined ? fallback : NaN) : val;\n    }\n    set(key, value) {\n        this.m.set(key, value);\n    }\n}\nconst config = /*@__PURE__*/ new Config();\nconst configFromSession = (win) => {\n    try {\n        const configStr = win.sessionStorage.getItem(IONIC_SESSION_KEY);\n        return configStr !== null ? JSON.parse(configStr) : {};\n    }\n    catch (e) {\n        return {};\n    }\n};\nconst saveConfig = (win, c) => {\n    try {\n        win.sessionStorage.setItem(IONIC_SESSION_KEY, JSON.stringify(c));\n    }\n    catch (e) {\n        return;\n    }\n};\nconst configFromURL = (win) => {\n    const configObj = {};\n    win.location.search\n        .slice(1)\n        .split('&')\n        .map((entry) => entry.split('='))\n        .map(([key, value]) => [decodeURIComponent(key), decodeURIComponent(value)])\n        .filter(([key]) => startsWith(key, IONIC_PREFIX))\n        .map(([key, value]) => [key.slice(IONIC_PREFIX.length), value])\n        .forEach(([key, value]) => {\n        configObj[key] = value;\n    });\n    return configObj;\n};\nconst startsWith = (input, search) => {\n    return input.substr(0, search.length) === search;\n};\nconst IONIC_PREFIX = 'ionic:';\nconst IONIC_SESSION_KEY = 'ionic-persist-config';\n\nconst getPlatforms = (win) => setupPlatforms(win);\nconst isPlatform = (winOrPlatform, platform) => {\n    if (typeof winOrPlatform === 'string') {\n        platform = winOrPlatform;\n        winOrPlatform = undefined;\n    }\n    return getPlatforms(winOrPlatform).includes(platform);\n};\nconst setupPlatforms = (win = window) => {\n    if (typeof win === 'undefined') {\n        return [];\n    }\n    win.Ionic = win.Ionic || {};\n    let platforms = win.Ionic.platforms;\n    if (platforms == null) {\n        platforms = win.Ionic.platforms = detectPlatforms(win);\n        platforms.forEach((p) => win.document.documentElement.classList.add(`plt-${p}`));\n    }\n    return platforms;\n};\nconst detectPlatforms = (win) => {\n    const customPlatformMethods = config.get('platform');\n    return Object.keys(PLATFORMS_MAP).filter((p) => {\n        const customMethod = customPlatformMethods === null || customPlatformMethods === void 0 ? void 0 : customPlatformMethods[p];\n        return typeof customMethod === 'function' ? customMethod(win) : PLATFORMS_MAP[p](win);\n    });\n};\nconst isMobileWeb = (win) => isMobile(win) && !isHybrid(win);\nconst isIpad = (win) => {\n    // iOS 12 and below\n    if (testUserAgent(win, /iPad/i)) {\n        return true;\n    }\n    // iOS 13+\n    if (testUserAgent(win, /Macintosh/i) && isMobile(win)) {\n        return true;\n    }\n    return false;\n};\nconst isIphone = (win) => testUserAgent(win, /iPhone/i);\nconst isIOS = (win) => testUserAgent(win, /iPhone|iPod/i) || isIpad(win);\nconst isAndroid = (win) => testUserAgent(win, /android|sink/i);\nconst isAndroidTablet = (win) => {\n    return isAndroid(win) && !testUserAgent(win, /mobile/i);\n};\nconst isPhablet = (win) => {\n    const width = win.innerWidth;\n    const height = win.innerHeight;\n    const smallest = Math.min(width, height);\n    const largest = Math.max(width, height);\n    return smallest > 390 && smallest < 520 && largest > 620 && largest < 800;\n};\nconst isTablet = (win) => {\n    const width = win.innerWidth;\n    const height = win.innerHeight;\n    const smallest = Math.min(width, height);\n    const largest = Math.max(width, height);\n    return isIpad(win) || isAndroidTablet(win) || (smallest > 460 && smallest < 820 && largest > 780 && largest < 1400);\n};\nconst isMobile = (win) => matchMedia(win, '(any-pointer:coarse)');\nconst isDesktop = (win) => !isMobile(win);\nconst isHybrid = (win) => isCordova(win) || isCapacitorNative(win);\nconst isCordova = (win) => !!(win['cordova'] || win['phonegap'] || win['PhoneGap']);\nconst isCapacitorNative = (win) => {\n    const capacitor = win['Capacitor'];\n    return !!(capacitor === null || capacitor === void 0 ? void 0 : capacitor.isNative);\n};\nconst isElectron = (win) => testUserAgent(win, /electron/i);\nconst isPWA = (win) => { var _a; return !!(((_a = win.matchMedia) === null || _a === void 0 ? void 0 : _a.call(win, '(display-mode: standalone)').matches) || win.navigator.standalone); };\nconst testUserAgent = (win, expr) => expr.test(win.navigator.userAgent);\nconst matchMedia = (win, query) => { var _a; return (_a = win.matchMedia) === null || _a === void 0 ? void 0 : _a.call(win, query).matches; };\nconst PLATFORMS_MAP = {\n    ipad: isIpad,\n    iphone: isIphone,\n    ios: isIOS,\n    android: isAndroid,\n    phablet: isPhablet,\n    tablet: isTablet,\n    cordova: isCordova,\n    capacitor: isCapacitorNative,\n    electron: isElectron,\n    pwa: isPWA,\n    mobile: isMobile,\n    mobileweb: isMobileWeb,\n    desktop: isDesktop,\n    hybrid: isHybrid,\n};\n\n// TODO(FW-2832): types\nlet defaultMode;\nconst getIonMode = (ref) => {\n    return (ref && getMode(ref)) || defaultMode;\n};\nconst initialize = (userConfig = {}) => {\n    if (typeof window === 'undefined') {\n        return;\n    }\n    const doc = window.document;\n    const win = window;\n    const Ionic = (win.Ionic = win.Ionic || {});\n    const platformHelpers = {};\n    if (userConfig._ael) {\n        platformHelpers.ael = userConfig._ael;\n    }\n    if (userConfig._rel) {\n        platformHelpers.rel = userConfig._rel;\n    }\n    if (userConfig._ce) {\n        platformHelpers.ce = userConfig._ce;\n    }\n    setPlatformHelpers(platformHelpers);\n    // create the Ionic.config from raw config object (if it exists)\n    // and convert Ionic.config into a ConfigApi that has a get() fn\n    const configObj = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, configFromSession(win)), { persistConfig: false }), Ionic.config), configFromURL(win)), userConfig);\n    config.reset(configObj);\n    if (config.getBoolean('persistConfig')) {\n        saveConfig(win, configObj);\n    }\n    // Setup platforms\n    setupPlatforms(win);\n    // first see if the mode was set as an attribute on <html>\n    // which could have been set by the user, or by pre-rendering\n    // otherwise get the mode via config settings, and fallback to md\n    Ionic.config = config;\n    Ionic.mode = defaultMode = config.get('mode', doc.documentElement.getAttribute('mode') || (isPlatform(win, 'ios') ? 'ios' : 'md'));\n    config.set('mode', defaultMode);\n    doc.documentElement.setAttribute('mode', defaultMode);\n    doc.documentElement.classList.add(defaultMode);\n    if (config.getBoolean('_testing')) {\n        config.set('animated', false);\n    }\n    const isIonicElement = (elm) => { var _a; return (_a = elm.tagName) === null || _a === void 0 ? void 0 : _a.startsWith('ION-'); };\n    const isAllowedIonicModeValue = (elmMode) => ['ios', 'md'].includes(elmMode);\n    setMode((elm) => {\n        while (elm) {\n            const elmMode = elm.mode || elm.getAttribute('mode');\n            if (elmMode) {\n                if (isAllowedIonicModeValue(elmMode)) {\n                    return elmMode;\n                }\n                else if (isIonicElement(elm)) {\n                    console.warn('Invalid ionic mode: \"' + elmMode + '\", expected: \"ios\" or \"md\"');\n                }\n            }\n            elm = elm.parentElement;\n        }\n        return defaultMode;\n    });\n};\n\nexport { isPlatform as a, getIonMode as b, config as c, getPlatforms as g, initialize as i };\n"],
  "mappings": "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",
  "names": ["NgZone", "Injector", "EnvironmentInjector", "ElementRef", "ActivatedRoute", "Router", "Config", "NgZone", "Injector", "IonPopover", "IonModal", "EnvironmentInjector", "ActivatedRoute", "Router", "IonBackButton", "config", "IonNav", "ElementRef", "raf"]
}
