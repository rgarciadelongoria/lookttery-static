import{coerceElement as u,coerceNumberProperty as b}from"@angular/cdk/coercion";import*as s from"@angular/core";import{EventEmitter as d,booleanAttribute as a}from"@angular/core";import{Observable as v,Subject as h}from"rxjs";import{debounceTime as l}from"rxjs/operators";var o=(()=>{class t{create(e){return typeof MutationObserver>"u"?null:new MutationObserver(e)}static{this.\u0275fac=function(r){return new(r||t)}}static{this.\u0275prov=s.\u0275\u0275defineInjectable({token:t,factory:t.\u0275fac,providedIn:"root"})}}return t})(),f=(()=>{class t{constructor(e){this._mutationObserverFactory=e,this._observedElements=new Map}ngOnDestroy(){this._observedElements.forEach((e,r)=>this._cleanupObserver(r))}observe(e){let r=u(e);return new v(n=>{let c=this._observeElement(r).subscribe(n);return()=>{c.unsubscribe(),this._unobserveElement(r)}})}_observeElement(e){if(this._observedElements.has(e))this._observedElements.get(e).count++;else{let r=new h,n=this._mutationObserverFactory.create(i=>r.next(i));n&&n.observe(e,{characterData:!0,childList:!0,subtree:!0}),this._observedElements.set(e,{observer:n,stream:r,count:1})}return this._observedElements.get(e).stream}_unobserveElement(e){this._observedElements.has(e)&&(this._observedElements.get(e).count--,this._observedElements.get(e).count||this._cleanupObserver(e))}_cleanupObserver(e){if(this._observedElements.has(e)){let{observer:r,stream:n}=this._observedElements.get(e);r&&r.disconnect(),n.complete(),this._observedElements.delete(e)}}static{this.\u0275fac=function(r){return new(r||t)(s.\u0275\u0275inject(o))}}static{this.\u0275prov=s.\u0275\u0275defineInjectable({token:t,factory:t.\u0275fac,providedIn:"root"})}}return t})(),I=(()=>{class t{get disabled(){return this._disabled}set disabled(e){this._disabled=e,this._disabled?this._unsubscribe():this._subscribe()}get debounce(){return this._debounce}set debounce(e){this._debounce=b(e),this._subscribe()}constructor(e,r,n){this._contentObserver=e,this._elementRef=r,this._ngZone=n,this.event=new d,this._disabled=!1,this._currentSubscription=null}ngAfterContentInit(){!this._currentSubscription&&!this.disabled&&this._subscribe()}ngOnDestroy(){this._unsubscribe()}_subscribe(){this._unsubscribe();let e=this._contentObserver.observe(this._elementRef);this._ngZone.runOutsideAngular(()=>{this._currentSubscription=(this.debounce?e.pipe(l(this.debounce)):e).subscribe(this.event)})}_unsubscribe(){this._currentSubscription?.unsubscribe()}static{this.\u0275fac=function(r){return new(r||t)(s.\u0275\u0275directiveInject(f),s.\u0275\u0275directiveInject(s.ElementRef),s.\u0275\u0275directiveInject(s.NgZone))}}static{this.\u0275dir=s.\u0275\u0275defineDirective({type:t,selectors:[["","cdkObserveContent",""]],inputs:{disabled:["cdkObserveContentDisabled","disabled",a],debounce:"debounce"},outputs:{event:"cdkObserveContent"},exportAs:["cdkObserveContent"],standalone:!0,features:[s.\u0275\u0275InputTransformsFeature]})}}return t})(),j=(()=>{class t{static{this.\u0275fac=function(r){return new(r||t)}}static{this.\u0275mod=s.\u0275\u0275defineNgModule({type:t})}static{this.\u0275inj=s.\u0275\u0275defineInjector({providers:[o]})}}return t})();export{I as CdkObserveContent,f as ContentObserver,o as MutationObserverFactory,j as ObserversModule};
