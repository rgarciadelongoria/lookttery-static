import{coerceElement as a,coerceNumberProperty as h}from"@angular/cdk/coercion";import*as s from"@angular/core";import{EventEmitter as l,booleanAttribute as v}from"@angular/core";import{Observable as f,Subject as m}from"rxjs";import{map as p,filter as _,debounceTime as g}from"rxjs/operators";function E(t){if(t.type==="characterData"&&t.target instanceof Comment)return!0;if(t.type==="childList"){for(let i=0;i<t.addedNodes.length;i++)if(!(t.addedNodes[i]instanceof Comment))return!1;for(let i=0;i<t.removedNodes.length;i++)if(!(t.removedNodes[i]instanceof Comment))return!1;return!0}return!1}var u=(()=>{class t{create(e){return typeof MutationObserver>"u"?null:new MutationObserver(e)}static{this.ɵfac=function(n){return new(n||t)}}static{this.ɵprov=s.ɵɵdefineInjectable({token:t,factory:t.ɵfac,providedIn:"root"})}}return t})(),y=(()=>{class t{constructor(e){this._mutationObserverFactory=e,this._observedElements=new Map}ngOnDestroy(){this._observedElements.forEach((e,n)=>this._cleanupObserver(n))}observe(e){let n=a(e);return new f(r=>{let d=this._observeElement(n).pipe(p(o=>o.filter(b=>!E(b))),_(o=>!!o.length)).subscribe(r);return()=>{d.unsubscribe(),this._unobserveElement(n)}})}_observeElement(e){if(this._observedElements.has(e))this._observedElements.get(e).count++;else{let n=new m,r=this._mutationObserverFactory.create(c=>n.next(c));r&&r.observe(e,{characterData:!0,childList:!0,subtree:!0}),this._observedElements.set(e,{observer:r,stream:n,count:1})}return this._observedElements.get(e).stream}_unobserveElement(e){this._observedElements.has(e)&&(this._observedElements.get(e).count--,this._observedElements.get(e).count||this._cleanupObserver(e))}_cleanupObserver(e){if(this._observedElements.has(e)){let{observer:n,stream:r}=this._observedElements.get(e);n&&n.disconnect(),r.complete(),this._observedElements.delete(e)}}static{this.ɵfac=function(n){return new(n||t)(s.ɵɵinject(u))}}static{this.ɵprov=s.ɵɵdefineInjectable({token:t,factory:t.ɵfac,providedIn:"root"})}}return t})(),F=(()=>{class t{get disabled(){return this._disabled}set disabled(e){this._disabled=e,this._disabled?this._unsubscribe():this._subscribe()}get debounce(){return this._debounce}set debounce(e){this._debounce=h(e),this._subscribe()}constructor(e,n,r){this._contentObserver=e,this._elementRef=n,this._ngZone=r,this.event=new l,this._disabled=!1,this._currentSubscription=null}ngAfterContentInit(){!this._currentSubscription&&!this.disabled&&this._subscribe()}ngOnDestroy(){this._unsubscribe()}_subscribe(){this._unsubscribe();let e=this._contentObserver.observe(this._elementRef);this._ngZone.runOutsideAngular(()=>{this._currentSubscription=(this.debounce?e.pipe(g(this.debounce)):e).subscribe(this.event)})}_unsubscribe(){this._currentSubscription?.unsubscribe()}static{this.ɵfac=function(n){return new(n||t)(s.ɵɵdirectiveInject(y),s.ɵɵdirectiveInject(s.ElementRef),s.ɵɵdirectiveInject(s.NgZone))}}static{this.ɵdir=s.ɵɵdefineDirective({type:t,selectors:[["","cdkObserveContent",""]],inputs:{disabled:["cdkObserveContentDisabled","disabled",v],debounce:"debounce"},outputs:{event:"cdkObserveContent"},exportAs:["cdkObserveContent"],standalone:!0,features:[s.ɵɵInputTransformsFeature]})}}return t})(),S=(()=>{class t{static{this.ɵfac=function(n){return new(n||t)}}static{this.ɵmod=s.ɵɵdefineNgModule({type:t})}static{this.ɵinj=s.ɵɵdefineInjector({providers:[u]})}}return t})();export{F as CdkObserveContent,y as ContentObserver,u as MutationObserverFactory,S as ObserversModule};