var C=Object.defineProperty,x=Object.defineProperties;var E=Object.getOwnPropertyDescriptors;var g=Object.getOwnPropertySymbols;var D=Object.prototype.hasOwnProperty,F=Object.prototype.propertyIsEnumerable;var w=(n,r,e)=>r in n?C(n,r,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[r]=e,S=(n,r)=>{for(var e in r||={})D.call(r,e)&&w(n,e,r[e]);if(g)for(var e of g(r))F.call(r,e)&&w(n,e,r[e]);return n},y=(n,r)=>x(n,E(r));var u=(n,r,e)=>new Promise((t,i)=>{var o=d=>{try{h(e.next(d))}catch(m){i(m)}},c=d=>{try{h(e.throw(d))}catch(m){i(m)}},h=d=>d.done?t(d.value):Promise.resolve(d.value).then(o,c);h((e=e.apply(n,r)).next())});import{CommonModule as R}from"@angular/common";import*as s from"@angular/core";import{EventEmitter as a}from"@angular/core";import{FormsModule as A}from"@angular/forms";import{BrowserMultiFormatReader as P,BrowserCodeReader as f}from"@zxing/browser";import{NotFoundException as M,ChecksumException as N,FormatException as O,DecodeHintType as l,BarcodeFormat as b}from"@zxing/library";import{BehaviorSubject as B}from"rxjs";var I=["preview"],p=class extends P{getScannerControls(){if(!this.scannerControls)throw new Error("No scanning is running at the time.");return this.scannerControls}scanFromDeviceObservable(r,e){return u(this,null,function*(){let t=new B({}),i;try{i=yield this.decodeFromVideoDevice(r,e,(o,c)=>{if(!c){t.next({result:o});return}let h=c.name;if(h===M.name||h===N.name||h===O.name||c.message.includes("No MultiFormat Readers were able to detect the code.")){t.next({error:c});return}t.error(c),this.scannerControls.stop(),this.scannerControls=void 0}),this.scannerControls=y(S({},i),{stop(){i.stop(),t.complete()}})}catch(o){t.error(o),this.scannerControls?.stop(),this.scannerControls=void 0}return t.asObservable()})}},q=(()=>{class n{get codeReader(){return this._codeReader}set device(e){if(!this._ready){this._devicePreStart=e;return}if(this.isAutostarting){console.warn("Avoid setting a device during auto-start.");return}if(this.isCurrentDevice(e)){console.warn("Setting the same device is not allowed.");return}if(!this.hasPermission){console.warn("Permissions not set yet, waiting for them to be set to apply device change.");return}this.setDevice(e)}get device(){return this._device}get formats(){return this.hints.get(l.POSSIBLE_FORMATS)}set formats(e){if(typeof e=="string")throw new Error("Invalid formats, make sure the [formats] input is a binding.");let t=e.map(o=>this.getBarcodeFormatOrFail(o)),i=this.hints;i.set(l.POSSIBLE_FORMATS,t),this.hints=i}get hints(){return this._hints}set hints(e){this._hints=e,this.codeReader?.setHints(this._hints)}set videoConstraints(e){let t=this.codeReader?.getScannerControls();t&&t?.streamVideoConstraintsApply(e)}set isAutostarting(e){this._isAutostarting=e,this.autostarting.next(e)}get isAutostarting(){return this._isAutostarting}set torch(e){try{this.getCodeReader().getScannerControls().switchTorch(e)}catch{}}set enable(e){this._enabled=!!e,this._enabled?this.device?this.scanFromDevice(this.device.deviceId):this.init():(this.reset(),p.releaseAllStreams())}get enabled(){return this._enabled}get tryHarder(){return this.hints.get(l.TRY_HARDER)}set tryHarder(e){let t=this.hints;e?t.set(l.TRY_HARDER,!0):t.delete(l.TRY_HARDER),this.hints=t}constructor(){this.timeBetweenScans=500,this.delayBetweenScanSuccess=500,this.previewFitMode="cover",this.poster="",this._ready=!1,this.autostarted=new a,this.autostarting=new a,this.torchCompatible=new a(!1),this.scanSuccess=new a,this.scanFailure=new a,this.scanError=new a,this.scanComplete=new a,this.camerasFound=new a,this.camerasNotFound=new a,this.permissionResponse=new a(!0),this.hasDevices=new a,this.deviceChange=new a,this._enabled=!0,this._hints=new Map,this.autofocusEnabled=!0,this.autostart=!0,this.formats=[b.QR_CODE],this.hasNavigator=typeof navigator<"u",this.isMediaDevicesSupported=this.hasNavigator&&!!navigator.mediaDevices}askForPermission(){return u(this,null,function*(){if(!this.hasNavigator)return console.error("@zxing/ngx-scanner","Can't ask permission, navigator is not present."),this.setPermission(null),this.hasPermission;if(!this.isMediaDevicesSupported)return console.error("@zxing/ngx-scanner","Can't get user media, this is not supported."),this.setPermission(null),this.hasPermission;let e,t;try{e=yield this.getAnyVideoDevice(),t=!!e}catch(i){return this.handlePermissionException(i)}finally{this.terminateStream(e)}return this.setPermission(t),t})}getAnyVideoDevice(){return navigator.mediaDevices.getUserMedia({video:!0})}terminateStream(e){e&&e.getTracks().forEach(t=>t.stop()),e=void 0}init(){return u(this,null,function*(){if(!this.autostart){console.warn("Feature 'autostart' disabled. Permissions and devices recovery has to be run manually."),this.initAutostartOff(),this._ready=!0;return}yield this.initAutostartOn(),this._ready=!0})}initAutostartOff(){this.isAutostarting=!1,this.updateVideoInputDevices(),this._device&&this._devicePreStart&&this.setDevice(this._devicePreStart)}initAutostartOn(){return u(this,null,function*(){this.isAutostarting=!0;let e;try{e=yield this.askForPermission()}catch(t){console.error("Exception occurred while asking for permission:",t);return}if(e){let t=yield this.updateVideoInputDevices();yield this.autostartScanner([...t])}this.isAutostarting=!1,this.autostarted.next()})}isCurrentDevice(e){return e?.deviceId===this._device?.deviceId}ngOnDestroy(){this.reset(),f.cleanVideoSource(this.previewElemRef.nativeElement),p.releaseAllStreams()}ngOnInit(){this.init()}scanStop(){this._scanSubscription&&(this.codeReader?.getScannerControls().stop(),this._scanSubscription?.unsubscribe(),this._scanSubscription=void 0),this.torchCompatible.next(!1)}scanStart(){if(this._scanSubscription)throw new Error("There is already a scan process running.");if(!this._device)throw new Error("No device defined, cannot start scan, please define a device.");this.scanFromDevice(this._device.deviceId)}restart(){this._codeReader=void 0;let e=this._reset();e&&(this.device=e)}updateVideoInputDevices(){return u(this,null,function*(){let e=(yield f.listVideoInputDevices())||[],t=e&&e.length>0;return this.hasDevices.next(t),this.camerasFound.next([...e]),t||this.camerasNotFound.next(null),e})}autostartScanner(e){return u(this,null,function*(){let t=({label:o})=>/back|trás|rear|traseira|environment|ambiente/gi.test(o),i=e.find(t)||e.pop();if(!i)throw new Error("Impossible to autostart, no input devices available.");yield this.setDevice(i),this.deviceChange.next(i)})}dispatchScanSuccess(e){this.scanSuccess.next(e.getText())}dispatchScanFailure(e){this.scanFailure.next(e)}dispatchScanError(e){this.scanError.observed||(console.error(`zxing scanner component: ${e.name}`,e),console.warn("Use the `(scanError)` property to handle errors like this!")),this.scanError.next(e)}dispatchScanComplete(e){this.scanComplete.next(e)}handlePermissionException(e){console.error("@zxing/ngx-scanner","Error when asking for permission.",e);let t;switch(e.name){case"NotSupportedError":console.warn("@zxing/ngx-scanner",e.message),t=null,this.hasDevices.next(null);break;case"NotAllowedError":console.warn("@zxing/ngx-scanner",e.message),t=!1,this.hasDevices.next(!0);break;case"NotFoundError":console.warn("@zxing/ngx-scanner",e.message),t=null,this.hasDevices.next(!1),this.camerasNotFound.next(e);break;case"NotReadableError":console.warn("@zxing/ngx-scanner","Couldn't read the device(s)'s stream, it's probably in use by another app."),t=null,this.hasDevices.next(!1),this.camerasNotFound.next(e);break;default:console.warn("@zxing/ngx-scanner","I was not able to define if I have permissions for camera or not.",e),t=null;break}return this.setPermission(t),this.permissionResponse.error(e),t}getBarcodeFormatOrFail(e){return typeof e=="string"?b[e.trim().toUpperCase()]:e}getCodeReader(){if(!this._codeReader){let e={delayBetweenScanAttempts:this.timeBetweenScans,delayBetweenScanSuccess:this.delayBetweenScanSuccess};this._codeReader=new p(this.hints,e)}return this._codeReader}scanFromDevice(e){return u(this,null,function*(){let t=this.previewElemRef.nativeElement,i=this.getCodeReader(),o=yield i.scanFromDeviceObservable(e,t);if(!o)throw new Error("Undefined decoding stream, aborting.");let c=v=>this._onDecodeResult(v.result,v.error),h=v=>this._onDecodeError(v),d=()=>{};if(this._scanSubscription=o.subscribe(c,h,d),this._scanSubscription.closed)return;let _=typeof i.getScannerControls().switchTorch<"u";this.torchCompatible.next(_)})}_onDecodeError(e){this.dispatchScanError(e)}_onDecodeResult(e,t){e?this.dispatchScanSuccess(e):this.dispatchScanFailure(t),this.dispatchScanComplete(e)}_reset(){if(!this._codeReader)return;this._codeReader=void 0;let e=this._device;return this.device=void 0,e}reset(){this._reset(),this.deviceChange.emit(null)}setDevice(e){return u(this,null,function*(){this.scanStop(),this._device=e||void 0,this._device||f.cleanVideoSource(this.previewElemRef.nativeElement),this._enabled&&e&&(yield this.scanFromDevice(e.deviceId))})}setPermission(e){this.hasPermission=e,this.permissionResponse.next(e)}static{this.ɵfac=function(t){return new(t||n)}}static{this.ɵcmp=s.ɵɵdefineComponent({type:n,selectors:[["zxing-scanner"]],viewQuery:function(t,i){if(t&1&&s.ɵɵviewQuery(I,7),t&2){let o;s.ɵɵqueryRefresh(o=s.ɵɵloadQuery())&&(i.previewElemRef=o.first)}},inputs:{autofocusEnabled:"autofocusEnabled",timeBetweenScans:"timeBetweenScans",delayBetweenScanSuccess:"delayBetweenScanSuccess",autostart:"autostart",previewFitMode:"previewFitMode",poster:"poster",device:"device",formats:"formats",videoConstraints:"videoConstraints",torch:"torch",enable:"enable",tryHarder:"tryHarder"},outputs:{autostarted:"autostarted",autostarting:"autostarting",torchCompatible:"torchCompatible",scanSuccess:"scanSuccess",scanFailure:"scanFailure",scanError:"scanError",scanComplete:"scanComplete",camerasFound:"camerasFound",camerasNotFound:"camerasNotFound",permissionResponse:"permissionResponse",hasDevices:"hasDevices",deviceChange:"deviceChange"},decls:6,vars:3,consts:[[3,"poster"],["preview",""]],template:function(t,i){t&1&&(s.ɵɵelementStart(0,"video",0,1)(2,"p"),s.ɵɵtext(3," Your browser does not support this feature, please try to upgrade it. "),s.ɵɵelementEnd(),s.ɵɵelementStart(4,"p"),s.ɵɵtext(5," Seu navegador n\xE3o suporta este recurso, por favor tente atualiz\xE1-lo. "),s.ɵɵelementEnd()()),t&2&&(s.ɵɵstyleProp("object-fit",i.previewFitMode),s.ɵɵproperty("poster",i.poster,s.ɵɵsanitizeUrl))},styles:["[_nghost-%COMP%]{display:block}video[_ngcontent-%COMP%]{width:100%;height:auto;object-fit:contain}"],changeDetection:0})}}return n})(),G=(()=>{class n{static{this.ɵfac=function(t){return new(t||n)}}static{this.ɵmod=s.ɵɵdefineNgModule({type:n})}static{this.ɵinj=s.ɵɵdefineInjector({imports:[R,A]})}}return n})();export{q as ZXingScannerComponent,G as ZXingScannerModule};