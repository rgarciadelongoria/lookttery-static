import*as h from"@angular/cdk/platform";import{normalizePassiveListenerOptions as f}from"@angular/cdk/platform";import*as i from"@angular/core";import{EventEmitter as _,booleanAttribute as g}from"@angular/core";import{coerceElement as c,coerceNumberProperty as d}from"@angular/cdk/coercion";import{EMPTY as p,Subject as m,fromEvent as x}from"rxjs";import{auditTime as v,takeUntil as E}from"rxjs/operators";import{DOCUMENT as w}from"@angular/common";var u=f({passive:!0}),H=(()=>{class s{constructor(e,t){this._platform=e,this._ngZone=t,this._monitoredElements=new Map}monitor(e){if(!this._platform.isBrowser)return p;let t=c(e),n=this._monitoredElements.get(t);if(n)return n.subject;let o=new m,r="cdk-text-field-autofilled",a=l=>{l.animationName==="cdk-text-field-autofill-start"&&!t.classList.contains(r)?(t.classList.add(r),this._ngZone.run(()=>o.next({target:l.target,isAutofilled:!0}))):l.animationName==="cdk-text-field-autofill-end"&&t.classList.contains(r)&&(t.classList.remove(r),this._ngZone.run(()=>o.next({target:l.target,isAutofilled:!1})))};return this._ngZone.runOutsideAngular(()=>{t.addEventListener("animationstart",a,u),t.classList.add("cdk-text-field-autofill-monitored")}),this._monitoredElements.set(t,{subject:o,unlisten:()=>{t.removeEventListener("animationstart",a,u)}}),o}stopMonitoring(e){let t=c(e),n=this._monitoredElements.get(t);n&&(n.unlisten(),n.subject.complete(),t.classList.remove("cdk-text-field-autofill-monitored"),t.classList.remove("cdk-text-field-autofilled"),this._monitoredElements.delete(t))}ngOnDestroy(){this._monitoredElements.forEach((e,t)=>this.stopMonitoring(t))}static{this.ɵfac=function(t){return new(t||s)(i.ɵɵinject(h.Platform),i.ɵɵinject(i.NgZone))}}static{this.ɵprov=i.ɵɵdefineInjectable({token:s,factory:s.ɵfac,providedIn:"root"})}}return s})(),j=(()=>{class s{constructor(e,t){this._elementRef=e,this._autofillMonitor=t,this.cdkAutofill=new _}ngOnInit(){this._autofillMonitor.monitor(this._elementRef).subscribe(e=>this.cdkAutofill.emit(e))}ngOnDestroy(){this._autofillMonitor.stopMonitoring(this._elementRef)}static{this.ɵfac=function(t){return new(t||s)(i.ɵɵdirectiveInject(i.ElementRef),i.ɵɵdirectiveInject(H))}}static{this.ɵdir=i.ɵɵdefineDirective({type:s,selectors:[["","cdkAutofill",""]],outputs:{cdkAutofill:"cdkAutofill"},standalone:!0})}}return s})(),P=(()=>{class s{get minRows(){return this._minRows}set minRows(e){this._minRows=d(e),this._setMinHeight()}get maxRows(){return this._maxRows}set maxRows(e){this._maxRows=d(e),this._setMaxHeight()}get enabled(){return this._enabled}set enabled(e){this._enabled!==e&&((this._enabled=e)?this.resizeToFitContent(!0):this.reset())}get placeholder(){return this._textareaElement.placeholder}set placeholder(e){this._cachedPlaceholderHeight=void 0,e?this._textareaElement.setAttribute("placeholder",e):this._textareaElement.removeAttribute("placeholder"),this._cacheTextareaPlaceholderHeight()}constructor(e,t,n,o){this._elementRef=e,this._platform=t,this._ngZone=n,this._destroyed=new m,this._enabled=!0,this._previousMinRows=-1,this._isViewInited=!1,this._handleFocusEvent=r=>{this._hasFocus=r.type==="focus"},this._document=o,this._textareaElement=this._elementRef.nativeElement}_setMinHeight(){let e=this.minRows&&this._cachedLineHeight?`${this.minRows*this._cachedLineHeight}px`:null;e&&(this._textareaElement.style.minHeight=e)}_setMaxHeight(){let e=this.maxRows&&this._cachedLineHeight?`${this.maxRows*this._cachedLineHeight}px`:null;e&&(this._textareaElement.style.maxHeight=e)}ngAfterViewInit(){this._platform.isBrowser&&(this._initialHeight=this._textareaElement.style.height,this.resizeToFitContent(),this._ngZone.runOutsideAngular(()=>{let e=this._getWindow();x(e,"resize").pipe(v(16),E(this._destroyed)).subscribe(()=>this.resizeToFitContent(!0)),this._textareaElement.addEventListener("focus",this._handleFocusEvent),this._textareaElement.addEventListener("blur",this._handleFocusEvent)}),this._isViewInited=!0,this.resizeToFitContent(!0))}ngOnDestroy(){this._textareaElement.removeEventListener("focus",this._handleFocusEvent),this._textareaElement.removeEventListener("blur",this._handleFocusEvent),this._destroyed.next(),this._destroyed.complete()}_cacheTextareaLineHeight(){if(this._cachedLineHeight)return;let e=this._textareaElement.cloneNode(!1);e.rows=1,e.style.position="absolute",e.style.visibility="hidden",e.style.border="none",e.style.padding="0",e.style.height="",e.style.minHeight="",e.style.maxHeight="",e.style.overflow="hidden",this._textareaElement.parentNode.appendChild(e),this._cachedLineHeight=e.clientHeight,e.remove(),this._setMinHeight(),this._setMaxHeight()}_measureScrollHeight(){let e=this._textareaElement,t=e.style.marginBottom||"",n=this._platform.FIREFOX,o=n&&this._hasFocus,r=n?"cdk-textarea-autosize-measuring-firefox":"cdk-textarea-autosize-measuring";o&&(e.style.marginBottom=`${e.clientHeight}px`),e.classList.add(r);let a=e.scrollHeight-4;return e.classList.remove(r),o&&(e.style.marginBottom=t),a}_cacheTextareaPlaceholderHeight(){if(!this._isViewInited||this._cachedPlaceholderHeight!=null)return;if(!this.placeholder){this._cachedPlaceholderHeight=0;return}let e=this._textareaElement.value;this._textareaElement.value=this._textareaElement.placeholder,this._cachedPlaceholderHeight=this._measureScrollHeight(),this._textareaElement.value=e}ngDoCheck(){this._platform.isBrowser&&this.resizeToFitContent()}resizeToFitContent(e=!1){if(!this._enabled||(this._cacheTextareaLineHeight(),this._cacheTextareaPlaceholderHeight(),!this._cachedLineHeight))return;let t=this._elementRef.nativeElement,n=t.value;if(!e&&this._minRows===this._previousMinRows&&n===this._previousValue)return;let o=this._measureScrollHeight(),r=Math.max(o,this._cachedPlaceholderHeight||0);t.style.height=`${r}px`,this._ngZone.runOutsideAngular(()=>{typeof requestAnimationFrame<"u"?requestAnimationFrame(()=>this._scrollToCaretPosition(t)):setTimeout(()=>this._scrollToCaretPosition(t))}),this._previousValue=n,this._previousMinRows=this._minRows}reset(){this._initialHeight!==void 0&&(this._textareaElement.style.height=this._initialHeight)}_noopInputHandler(){}_getDocument(){return this._document||document}_getWindow(){return this._getDocument().defaultView||window}_scrollToCaretPosition(e){let{selectionStart:t,selectionEnd:n}=e;!this._destroyed.isStopped&&this._hasFocus&&e.setSelectionRange(t,n)}static{this.ɵfac=function(t){return new(t||s)(i.ɵɵdirectiveInject(i.ElementRef),i.ɵɵdirectiveInject(h.Platform),i.ɵɵdirectiveInject(i.NgZone),i.ɵɵdirectiveInject(w,8))}}static{this.ɵdir=i.ɵɵdefineDirective({type:s,selectors:[["textarea","cdkTextareaAutosize",""]],hostAttrs:["rows","1",1,"cdk-textarea-autosize"],hostBindings:function(t,n){t&1&&i.ɵɵlistener("input",function(){return n._noopInputHandler()})},inputs:{minRows:["cdkAutosizeMinRows","minRows"],maxRows:["cdkAutosizeMaxRows","maxRows"],enabled:["cdkTextareaAutosize","enabled",g],placeholder:"placeholder"},exportAs:["cdkTextareaAutosize"],standalone:!0,features:[i.ɵɵInputTransformsFeature]})}}return s})(),O=(()=>{class s{static{this.ɵfac=function(t){return new(t||s)}}static{this.ɵmod=i.ɵɵdefineNgModule({type:s})}static{this.ɵinj=i.ɵɵdefineInjector({})}}return s})();export{H as AutofillMonitor,j as CdkAutofill,P as CdkTextareaAutosize,O as TextFieldModule};